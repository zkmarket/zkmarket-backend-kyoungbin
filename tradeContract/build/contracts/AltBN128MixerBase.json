{
  "contractName": "AltBN128MixerBase",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "message",
          "type": "bytes32"
        }
      ],
      "name": "LogDebug",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "root",
          "type": "uint256"
        }
      ],
      "name": "LogDebugTree",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "root",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nullifier",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "com",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "addr",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "c_0",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "c_1",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "c_2",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "c_3_0",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "c_3_1",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "c_3_2",
          "type": "uint256"
        }
      ],
      "name": "LogTrans",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "pk",
          "type": "bytes32"
        }
      ],
      "name": "LogUserAddr",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "_computeMerklePath",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_nodes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAPK",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "addr",
          "type": "bytes32"
        }
      ],
      "name": "getCiphertext",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getMerklePath",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRootTop",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "apk",
          "type": "uint256"
        }
      ],
      "name": "registerAuditor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "addr",
          "type": "bytes32"
        }
      ],
      "name": "registerUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "tokenFallback",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "proof",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "rt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nf",
          "type": "uint256"
        },
        {
          "internalType": "uint256[3]",
          "name": "pk",
          "type": "uint256[3]"
        },
        {
          "internalType": "uint256",
          "name": "cm",
          "type": "uint256"
        },
        {
          "internalType": "uint256[2]",
          "name": "ct",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "values",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[6]",
          "name": "CT",
          "type": "uint256[6]"
        },
        {
          "internalType": "address",
          "name": "toEoA",
          "type": "address"
        }
      ],
      "name": "zkTransfer",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"message\",\"type\":\"bytes32\"}],\"name\":\"LogDebug\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"}],\"name\":\"LogDebugTree\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nullifier\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"com\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"addr\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"c_0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"c_1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"c_2\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"c_3_0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"c_3_1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"c_3_2\",\"type\":\"uint256\"}],\"name\":\"LogTrans\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"pk\",\"type\":\"bytes32\"}],\"name\":\"LogUserAddr\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"_computeMerklePath\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_nodes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAPK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"addr\",\"type\":\"bytes32\"}],\"name\":\"getCiphertext\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getMerklePath\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRootTop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"apk\",\"type\":\"uint256\"}],\"name\":\"registerAuditor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"addr\",\"type\":\"bytes32\"}],\"name\":\"registerUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proof\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"rt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nf\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"pk\",\"type\":\"uint256[3]\"},{\"internalType\":\"uint256\",\"name\":\"cm\",\"type\":\"uint256\"},{\"internalType\":\"uint256[2]\",\"name\":\"ct\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"values\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[6]\",\"name\":\"CT\",\"type\":\"uint256[6]\"},{\"internalType\":\"address\",\"name\":\"toEoA\",\"type\":\"address\"}],\"name\":\"zkTransfer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor of the contract\"}},\"notice\":\"Partial implementation of abstract MixerBase which implements the curve-specific methods to use the ALT-BN128 pairing.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/AltBN128MixerBase.sol\":\"AltBN128MixerBase\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/AltBN128MixerBase.sol\":{\"keccak256\":\"0x48d8192191f8b9e2b81cf4267fd746a50cdee8591b57b8a6052266ff78b84190\",\"license\":\"LGPL-3.0+\",\"urls\":[\"bzz-raw://6b127a8ba952936006f4493694cde669f809f904211d710af682d344b3463fe5\",\"dweb:/ipfs/QmcZKp2Za9bRTBx3D6dBb22mzoq79JRUFkgqWoFnUihBNK\"]},\"project:/contracts/BaseMerkleTree.sol\":{\"keccak256\":\"0xe4680463a9ef39b1eb67c89e3fddda27aaee8b40dc4387e83321578b6bd372f8\",\"license\":\"LGPL-3.0+\",\"urls\":[\"bzz-raw://9515268fe946df92935efcea96ecc1092dc5bcb2abfc316235850fc7d1972bbc\",\"dweb:/ipfs/QmdWrFLMPWzxj8ZM3gtr4mv9cKLpFADzTr8hKp5ytvWkE8\"]},\"project:/contracts/MiMC7.sol\":{\"keccak256\":\"0x6699f15f4ecd06e19e2263c96367069906f77d78b734833cea21e0448e07ea29\",\"license\":\"LGPL-3.0+\",\"urls\":[\"bzz-raw://aa4a3451df04180559d204a9669de06fd147533a27edfa2a4051539488836497\",\"dweb:/ipfs/QmZUNUrNDPATwMPW5cDQ2qh7cMVyrW5xaGedsf5Mrex2PW\"]},\"project:/contracts/Poseidon2.sol\":{\"keccak256\":\"0x76cb19323aaa34239039ef4f9fe5933be59b7719fea0546a9f0617b719e867a5\",\"license\":\"LGPL-3.0+\",\"urls\":[\"bzz-raw://0100ee8ab9eabe700ea7586d2d863565e998cb44f46b6226b624c2468b3b9846\",\"dweb:/ipfs/QmXZ5mab85zy7fJEUrcNC8LiLX14MEmU3GuPzjK9VHbUoE\"]},\"project:/contracts/Tokens.sol\":{\"keccak256\":\"0x836f6849c73c58588062bc670f3fb05b0b1558bcae2ebf5fcaa49aa892a33d71\",\"license\":\"LGPL-3.0+\",\"urls\":[\"bzz-raw://dfc4c4e9529b7931363e5ed52b3d92a1db473d4d4f315544a7f91e39e9f1d02e\",\"dweb:/ipfs/QmVQpwWE7ZGCRRwcL7ShEkhrp9gywgEevXAQSi44pAr5Fg\"]},\"project:/contracts/sha.sol\":{\"keccak256\":\"0xcf2e04104fc9a4c8491d93074c287779f910d14ca5b026548ff41e4890a7d899\",\"license\":\"LGPL-3.0+\",\"urls\":[\"bzz-raw://e180ceb0ff33dde7f6145b3ec258a8606acad11a64b577f41e2e6e409befef0d\",\"dweb:/ipfs/Qmbq6Qz6tnyekFBaXbGsTFopupyRbrE4q3XdshCqNMZ2ow\"]},\"project:/contracts/zklayBase.sol\":{\"keccak256\":\"0xa8af0551e5dc7c1ce449911f78ff54886d54ca1278b885a15e5c1ae43b619a47\",\"license\":\"LGPL-3.0+\",\"urls\":[\"bzz-raw://4ed681ec86c37ee480a5baa1cd3e633062a447d3cac0ba3b97af82ba0a432dc4\",\"dweb:/ipfs/QmetYET9McKBopRH2YYvW9mD7p88xCfmKoqA1zKMdR2E5Z\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// Copyright (c) 2015-2020 Clearmatics Technologies Ltd\n// Copyright (c) 2021-2021 Zkrypto Inc.\n// SPDX-License-Identifier: LGPL-3.0+\n\npragma solidity ^0.8.2;\npragma experimental ABIEncoderV2;\n\n// import \"./MixerBase.sol\";\nimport \"./zklayBase.sol\";\nimport \"./MiMC7.sol\";\nimport \"./sha.sol\";\nimport \"./Poseidon2.sol\";\n\n/// Partial implementation of abstract MixerBase which implements the\n/// curve-specific methods to use the ALT-BN128 pairing.\nabstract contract AltBN128MixerBase is ZklayBase\n{\n    /// Constructor of the contract\n    constructor(\n        uint256 mk_depth,\n        address token,\n        uint256[] memory vk,\n        uint256 hash_type\n    )\n        ZklayBase(mk_depth, token, vk, hash_type)\n    {\n    }\n\n    /// The Merkle tree hash functions.\n    function _hash(bytes32 left, bytes32 right) internal override returns(bytes32) {\n        if (_HASH_TYPE == uint256(1)) {\n            return MiMC7._hash(left, right);\n        }\n        else if(_HASH_TYPE ==uint256(2)){\n            return SHA256._hash(left, right);\n        }\n        else if (_HASH_TYPE == uint256(3)) {\n            return Poseidon2._hash(left, right);\n        }\n    }\n\n}\n",
  "sourcePath": "/Users/kim/azeroth-trade-dev/tradeContract/contracts/AltBN128MixerBase.sol",
  "ast": {
    "absolutePath": "project:/contracts/AltBN128MixerBase.sol",
    "exportedSymbols": {
      "AltBN128MixerBase": [
        84
      ],
      "BaseMerkleTree": [
        625
      ],
      "ERC20": [
        1926
      ],
      "ERC223ReceivingContract": [
        2026
      ],
      "MiMC7": [
        1059
      ],
      "Poseidon2": [
        1782
      ],
      "SHA256": [
        2899
      ],
      "ZklayBase": [
        3550
      ]
    },
    "id": 85,
    "license": "LGPL-3.0+",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "135:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "159:33:0"
      },
      {
        "absolutePath": "project:/contracts/zklayBase.sol",
        "file": "./zklayBase.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 85,
        "sourceUnit": 3551,
        "src": "223:25:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/MiMC7.sol",
        "file": "./MiMC7.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 85,
        "sourceUnit": 1060,
        "src": "249:21:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/sha.sol",
        "file": "./sha.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 85,
        "sourceUnit": 2900,
        "src": "271:19:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Poseidon2.sol",
        "file": "./Poseidon2.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 85,
        "sourceUnit": 1783,
        "src": "291:25:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 8,
              "name": "ZklayBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3550,
              "src": "484:9:0"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "484:9:0"
          }
        ],
        "contractDependencies": [
          625,
          2026,
          3550
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 7,
          "nodeType": "StructuredDocumentation",
          "src": "318:127:0",
          "text": "Partial implementation of abstract MixerBase which implements the\n curve-specific methods to use the ALT-BN128 pairing."
        },
        "fullyImplemented": false,
        "id": 84,
        "linearizedBaseContracts": [
          84,
          3550,
          2026,
          625
        ],
        "name": "AltBN128MixerBase",
        "nameLocation": "463:17:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 28,
              "nodeType": "Block",
              "src": "713:7:0",
              "statements": []
            },
            "documentation": {
              "id": 10,
              "nodeType": "StructuredDocumentation",
              "src": "500:31:0",
              "text": "Constructor of the contract"
            },
            "id": 29,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 22,
                    "name": "mk_depth",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12,
                    "src": "677:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 23,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14,
                    "src": "687:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 24,
                    "name": "vk",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17,
                    "src": "694:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "id": 25,
                    "name": "hash_type",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "698:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 26,
                "modifierName": {
                  "id": 21,
                  "name": "ZklayBase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3550,
                  "src": "667:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "667:41:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "mk_depth",
                  "nameLocation": "565:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "557:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "591:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "583:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "583:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "mutability": "mutable",
                  "name": "vk",
                  "nameLocation": "623:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "606:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 15,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "606:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 16,
                    "nodeType": "ArrayTypeName",
                    "src": "606:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "mutability": "mutable",
                  "name": "hash_type",
                  "nameLocation": "643:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "635:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "635:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "547:111:0"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "713:0:0"
            },
            "scope": 84,
            "src": "536:184:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              348
            ],
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "845:304:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 40,
                      "name": "_HASH_TYPE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 176,
                      "src": "859:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 43,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "881:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "873:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 41,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "873:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "873:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "859:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 58,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 53,
                        "name": "_HASH_TYPE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "958:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 56,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "979:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "971:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 54,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "971:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "971:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "958:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66,
                          "name": "_HASH_TYPE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 176,
                          "src": "1057:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "33",
                              "id": 69,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1079:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              }
                            ],
                            "id": 68,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1071:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 67,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1071:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1071:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1057:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 79,
                      "nodeType": "IfStatement",
                      "src": "1053:90:0",
                      "trueBody": {
                        "id": 78,
                        "nodeType": "Block",
                        "src": "1083:60:0",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 74,
                                  "name": "left",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32,
                                  "src": "1120:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 75,
                                  "name": "right",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34,
                                  "src": "1126:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 72,
                                  "name": "Poseidon2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1782,
                                  "src": "1104:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Poseidon2_$1782_$",
                                    "typeString": "type(library Poseidon2)"
                                  }
                                },
                                "id": 73,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "_hash",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1781,
                                "src": "1104:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                                }
                              },
                              "id": 76,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1104:28:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "functionReturnParameters": 39,
                            "id": 77,
                            "nodeType": "Return",
                            "src": "1097:35:0"
                          }
                        ]
                      }
                    },
                    "id": 80,
                    "nodeType": "IfStatement",
                    "src": "955:188:0",
                    "trueBody": {
                      "id": 65,
                      "nodeType": "Block",
                      "src": "982:57:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 61,
                                "name": "left",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32,
                                "src": "1016:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 62,
                                "name": "right",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "1022:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 59,
                                "name": "SHA256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2899,
                                "src": "1003:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_SHA256_$2899_$",
                                  "typeString": "type(library SHA256)"
                                }
                              },
                              "id": 60,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "_hash",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2898,
                              "src": "1003:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                                "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                              }
                            },
                            "id": 63,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1003:25:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "functionReturnParameters": 39,
                          "id": 64,
                          "nodeType": "Return",
                          "src": "996:32:0"
                        }
                      ]
                    }
                  },
                  "id": 81,
                  "nodeType": "IfStatement",
                  "src": "855:288:0",
                  "trueBody": {
                    "id": 52,
                    "nodeType": "Block",
                    "src": "885:56:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 48,
                              "name": "left",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "918:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 49,
                              "name": "right",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "924:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 46,
                              "name": "MiMC7",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1059,
                              "src": "906:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_MiMC7_$1059_$",
                                "typeString": "type(library MiMC7)"
                              }
                            },
                            "id": 47,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_hash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1058,
                            "src": "906:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                            }
                          },
                          "id": 50,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "906:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 39,
                        "id": 51,
                        "nodeType": "Return",
                        "src": "899:31:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 30,
              "nodeType": "StructuredDocumentation",
              "src": "726:35:0",
              "text": "The Merkle tree hash functions."
            },
            "id": 83,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_hash",
            "nameLocation": "775:5:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 36,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "819:8:0"
            },
            "parameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "left",
                  "nameLocation": "789:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "781:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "781:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "right",
                  "nameLocation": "803:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "795:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "795:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "780:29:0"
            },
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "836:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "836:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "835:9:0"
            },
            "scope": 84,
            "src": "766:383:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 85,
        "src": "445:707:0"
      }
    ],
    "src": "135:1018:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.2+commit.661d1103.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-06-27T05:00:51.670Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constructor of the contract"
      }
    },
    "notice": "Partial implementation of abstract MixerBase which implements the curve-specific methods to use the ALT-BN128 pairing.",
    "version": 1
  }
}