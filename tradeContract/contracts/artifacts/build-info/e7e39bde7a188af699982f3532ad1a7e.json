{
	"id": "e7e39bde7a188af699982f3532ad1a7e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Tokens.sol": {
				"content": "// Copyright (c) 2015-2020 Clearmatics Technologies Ltd\n//\n// SPDX-License-Identifier: LGPL-3.0+\n\npragma solidity ^0.8.2;\npragma experimental ABIEncoderV2;\n\n/// Declare the ERC20 interface in order to handle ERC20 tokens transfers to\n/// and from the Mixer. Note that we only declare the functions we are\n/// interested in, namely, transferFrom() (used to do a Deposit), and\n/// transfer() (used to do a withdrawal)\nabstract contract ERC20 \n{\n    function transferFrom(address from, address to, uint256 value) public virtual;\n    function transfer(address to, uint256 value) public virtual;\n}\n\n/// ERC223 token compatible contract\ncontract ERC223ReceivingContract {\n    // See:\n    // solhint-disable-next-line max-line-length\n    //   https://github.com/Dexaran/ERC223-token-standard/blob/Recommended/Receiver_Interface.sol\n    struct Token {\n        address sender;\n        uint256 value;\n        bytes data;\n        bytes4 sig;\n    }\n\n    function tokenFallback(\n        address from,\n        uint256 value,\n        bytes memory data\n    )\n        public\n        pure\n    {\n        Token memory tkn;\n        tkn.sender = from;\n        tkn.value = value;\n        tkn.data = data;\n\n        // See:\n        // solhint-disable-next-line max-line-length\n        //   https://solidity.readthedocs.io/en/v0.5.5/types.html#conversions-between-elementary-types\n        uint32 u =\n            uint32(bytes4(data[0])) +\n            uint32(bytes4(data[1]) >> 8) +\n            uint32(bytes4(data[2]) >> 16) +\n            uint32(bytes4(data[3]) >> 24);\n        tkn.sig = bytes4(u);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Tokens.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Declare the ERC20 interface in order to handle ERC20 tokens transfers to and from the Mixer. Note that we only declare the functions we are interested in, namely, transferFrom() (used to do a Deposit), and transfer() (used to do a withdrawal)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Tokens.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Tokens.sol\":{\"keccak256\":\"0x836f6849c73c58588062bc670f3fb05b0b1558bcae2ebf5fcaa49aa892a33d71\",\"license\":\"LGPL-3.0+\",\"urls\":[\"bzz-raw://dfc4c4e9529b7931363e5ed52b3d92a1db473d4d4f315544a7f91e39e9f1d02e\",\"dweb:/ipfs/QmVQpwWE7ZGCRRwcL7ShEkhrp9gywgEevXAQSi44pAr5Fg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Declare the ERC20 interface in order to handle ERC20 tokens transfers to and from the Mixer. Note that we only declare the functions we are interested in, namely, transferFrom() (used to do a Deposit), and transfer() (used to do a withdrawal)",
						"version": 1
					}
				},
				"ERC223ReceivingContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "tokenFallback",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Tokens.sol\":631:1578  contract ERC223ReceivingContract {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Tokens.sol\":631:1578  contract ERC223ReceivingContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc0ee0b8a\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Tokens.sol\":942:1576  function tokenFallback(... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      stop\n    tag_7:\n        /* \"contracts/Tokens.sol\":1085:1101  Token memory tkn */\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n        /* \"contracts/Tokens.sol\":1124:1128  from */\n      dup4\n        /* \"contracts/Tokens.sol\":1111:1114  tkn */\n      dup2\n        /* \"contracts/Tokens.sol\":1111:1121  tkn.sender */\n      0x00\n      add\n        /* \"contracts/Tokens.sol\":1111:1128  tkn.sender = from */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Tokens.sol\":1150:1155  value */\n      dup3\n        /* \"contracts/Tokens.sol\":1138:1141  tkn */\n      dup2\n        /* \"contracts/Tokens.sol\":1138:1147  tkn.value */\n      0x20\n      add\n        /* \"contracts/Tokens.sol\":1138:1155  tkn.value = value */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Tokens.sol\":1176:1180  data */\n      dup2\n        /* \"contracts/Tokens.sol\":1165:1168  tkn */\n      dup2\n        /* \"contracts/Tokens.sol\":1165:1173  tkn.data */\n      0x40\n      add\n        /* \"contracts/Tokens.sol\":1165:1180  tkn.data = data */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/Tokens.sol\":1363:1371  uint32 u */\n      0x00\n        /* \"contracts/Tokens.sol\":1537:1539  24 */\n      0x18\n        /* \"contracts/Tokens.sol\":1525:1529  data */\n      dup4\n        /* \"contracts/Tokens.sol\":1530:1531  3 */\n      0x03\n        /* \"contracts/Tokens.sol\":1525:1532  data[3] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_11\n      jumpi\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n    tag_11:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/Tokens.sol\":1518:1533  bytes4(data[3]) */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/Tokens.sol\":1518:1539  bytes4(data[3]) >> 24 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      shr\n        /* \"contracts/Tokens.sol\":1511:1540  uint32(bytes4(data[3]) >> 24) */\n      0xe0\n      shr\n        /* \"contracts/Tokens.sol\":1493:1495  16 */\n      0x10\n        /* \"contracts/Tokens.sol\":1481:1485  data */\n      dup5\n        /* \"contracts/Tokens.sol\":1486:1487  2 */\n      0x02\n        /* \"contracts/Tokens.sol\":1481:1488  data[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_14\n      jumpi\n      tag_15\n      tag_13\n      jump\t// in\n    tag_15:\n    tag_14:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/Tokens.sol\":1474:1489  bytes4(data[2]) */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/Tokens.sol\":1474:1495  bytes4(data[2]) >> 16 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      shr\n        /* \"contracts/Tokens.sol\":1467:1496  uint32(bytes4(data[2]) >> 16) */\n      0xe0\n      shr\n        /* \"contracts/Tokens.sol\":1450:1451  8 */\n      0x08\n        /* \"contracts/Tokens.sol\":1438:1442  data */\n      dup6\n        /* \"contracts/Tokens.sol\":1443:1444  1 */\n      0x01\n        /* \"contracts/Tokens.sol\":1438:1445  data[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_16\n      jumpi\n      tag_17\n      tag_13\n      jump\t// in\n    tag_17:\n    tag_16:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/Tokens.sol\":1431:1446  bytes4(data[1]) */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/Tokens.sol\":1431:1451  bytes4(data[1]) >> 8 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      shr\n        /* \"contracts/Tokens.sol\":1424:1452  uint32(bytes4(data[1]) >> 8) */\n      0xe0\n      shr\n        /* \"contracts/Tokens.sol\":1400:1404  data */\n      dup6\n        /* \"contracts/Tokens.sol\":1405:1406  0 */\n      0x00\n        /* \"contracts/Tokens.sol\":1400:1407  data[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_18\n      jumpi\n      tag_19\n      tag_13\n      jump\t// in\n    tag_19:\n    tag_18:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/Tokens.sol\":1393:1408  bytes4(data[0]) */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/Tokens.sol\":1386:1409  uint32(bytes4(data[0])) */\n      0xe0\n      shr\n        /* \"contracts/Tokens.sol\":1386:1452  uint32(bytes4(data[0])) +... */\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n        /* \"contracts/Tokens.sol\":1386:1496  uint32(bytes4(data[0])) +... */\n      tag_22\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_22:\n        /* \"contracts/Tokens.sol\":1386:1540  uint32(bytes4(data[0])) +... */\n      tag_23\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_23:\n        /* \"contracts/Tokens.sol\":1363:1540  uint32 u =... */\n      swap1\n      pop\n        /* \"contracts/Tokens.sol\":1567:1568  u */\n      dup1\n        /* \"contracts/Tokens.sol\":1560:1569  bytes4(u) */\n      0xe0\n      shl\n        /* \"contracts/Tokens.sol\":1550:1553  tkn */\n      dup3\n        /* \"contracts/Tokens.sol\":1550:1557  tkn.sig */\n      0x60\n      add\n        /* \"contracts/Tokens.sol\":1550:1569  tkn.sig = bytes4(u) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Tokens.sol\":1075:1576  {... */\n      pop\n      pop\n        /* \"contracts/Tokens.sol\":942:1576  function tokenFallback(... */\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_10:\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:417   */\n    tag_25:\n        /* \"#utility.yul\":84:89   */\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_27\n        /* \"#utility.yul\":125:173   */\n      tag_28\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_29\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":109:174   */\n      tag_30\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:361   */\n      iszero\n      tag_31\n      jumpi\n        /* \"#utility.yul\":280:359   */\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":249:361   */\n    tag_31:\n        /* \"#utility.yul\":370:411   */\n      tag_34\n        /* \"#utility.yul\":404:410   */\n      dup5\n        /* \"#utility.yul\":399:402   */\n      dup3\n        /* \"#utility.yul\":394:397   */\n      dup6\n        /* \"#utility.yul\":370:411   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":90:417   */\n      pop\n        /* \"#utility.yul\":7:417   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":423:562   */\n    tag_36:\n        /* \"#utility.yul\":469:474   */\n      0x00\n        /* \"#utility.yul\":507:513   */\n      dup2\n        /* \"#utility.yul\":494:514   */\n      calldataload\n        /* \"#utility.yul\":485:514   */\n      swap1\n      pop\n        /* \"#utility.yul\":523:556   */\n      tag_38\n        /* \"#utility.yul\":550:555   */\n      dup2\n        /* \"#utility.yul\":523:556   */\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":423:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":581:919   */\n    tag_40:\n        /* \"#utility.yul\":636:641   */\n      0x00\n        /* \"#utility.yul\":685:688   */\n      dup3\n        /* \"#utility.yul\":678:682   */\n      0x1f\n        /* \"#utility.yul\":670:676   */\n      dup4\n        /* \"#utility.yul\":666:683   */\n      add\n        /* \"#utility.yul\":662:689   */\n      slt\n        /* \"#utility.yul\":652:774   */\n      tag_42\n      jumpi\n        /* \"#utility.yul\":693:772   */\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":652:774   */\n    tag_42:\n        /* \"#utility.yul\":810:816   */\n      dup2\n        /* \"#utility.yul\":797:817   */\n      calldataload\n        /* \"#utility.yul\":835:913   */\n      tag_45\n        /* \"#utility.yul\":909:912   */\n      dup5\n        /* \"#utility.yul\":901:907   */\n      dup3\n        /* \"#utility.yul\":894:898   */\n      0x20\n        /* \"#utility.yul\":886:892   */\n      dup7\n        /* \"#utility.yul\":882:899   */\n      add\n        /* \"#utility.yul\":835:913   */\n      tag_25\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":826:913   */\n      swap2\n      pop\n        /* \"#utility.yul\":642:919   */\n      pop\n        /* \"#utility.yul\":581:919   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":925:1064   */\n    tag_46:\n        /* \"#utility.yul\":971:976   */\n      0x00\n        /* \"#utility.yul\":1009:1015   */\n      dup2\n        /* \"#utility.yul\":996:1016   */\n      calldataload\n        /* \"#utility.yul\":987:1016   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1058   */\n      tag_48\n        /* \"#utility.yul\":1052:1057   */\n      dup2\n        /* \"#utility.yul\":1025:1058   */\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":925:1064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1070:1867   */\n    tag_6:\n        /* \"#utility.yul\":1156:1162   */\n      0x00\n        /* \"#utility.yul\":1164:1170   */\n      dup1\n        /* \"#utility.yul\":1172:1178   */\n      0x00\n        /* \"#utility.yul\":1221:1223   */\n      0x60\n        /* \"#utility.yul\":1209:1218   */\n      dup5\n        /* \"#utility.yul\":1200:1207   */\n      dup7\n        /* \"#utility.yul\":1196:1219   */\n      sub\n        /* \"#utility.yul\":1192:1224   */\n      slt\n        /* \"#utility.yul\":1189:1308   */\n      iszero\n      tag_51\n      jumpi\n        /* \"#utility.yul\":1227:1306   */\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1189:1308   */\n    tag_51:\n        /* \"#utility.yul\":1347:1348   */\n      0x00\n        /* \"#utility.yul\":1372:1425   */\n      tag_54\n        /* \"#utility.yul\":1417:1424   */\n      dup7\n        /* \"#utility.yul\":1408:1414   */\n      dup3\n        /* \"#utility.yul\":1397:1406   */\n      dup8\n        /* \"#utility.yul\":1393:1415   */\n      add\n        /* \"#utility.yul\":1372:1425   */\n      tag_36\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1362:1425   */\n      swap4\n      pop\n        /* \"#utility.yul\":1318:1435   */\n      pop\n        /* \"#utility.yul\":1474:1476   */\n      0x20\n        /* \"#utility.yul\":1500:1553   */\n      tag_55\n        /* \"#utility.yul\":1545:1552   */\n      dup7\n        /* \"#utility.yul\":1536:1542   */\n      dup3\n        /* \"#utility.yul\":1525:1534   */\n      dup8\n        /* \"#utility.yul\":1521:1543   */\n      add\n        /* \"#utility.yul\":1500:1553   */\n      tag_46\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1490:1553   */\n      swap3\n      pop\n        /* \"#utility.yul\":1445:1563   */\n      pop\n        /* \"#utility.yul\":1630:1632   */\n      0x40\n        /* \"#utility.yul\":1619:1628   */\n      dup5\n        /* \"#utility.yul\":1615:1633   */\n      add\n        /* \"#utility.yul\":1602:1634   */\n      calldataload\n        /* \"#utility.yul\":1661:1679   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1653:1659   */\n      dup2\n        /* \"#utility.yul\":1650:1680   */\n      gt\n        /* \"#utility.yul\":1647:1764   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":1683:1762   */\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1647:1764   */\n    tag_56:\n        /* \"#utility.yul\":1788:1850   */\n      tag_59\n        /* \"#utility.yul\":1842:1849   */\n      dup7\n        /* \"#utility.yul\":1833:1839   */\n      dup3\n        /* \"#utility.yul\":1822:1831   */\n      dup8\n        /* \"#utility.yul\":1818:1840   */\n      add\n        /* \"#utility.yul\":1788:1850   */\n      tag_40\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1778:1850   */\n      swap2\n      pop\n        /* \"#utility.yul\":1573:1860   */\n      pop\n        /* \"#utility.yul\":1070:1867   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1873:2002   */\n    tag_30:\n        /* \"#utility.yul\":1907:1913   */\n      0x00\n        /* \"#utility.yul\":1934:1954   */\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1924:1954   */\n      swap1\n      pop\n        /* \"#utility.yul\":1963:1996   */\n      tag_63\n        /* \"#utility.yul\":1991:1995   */\n      dup3\n        /* \"#utility.yul\":1983:1989   */\n      dup3\n        /* \"#utility.yul\":1963:1996   */\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1873:2002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2008:2083   */\n    tag_62:\n        /* \"#utility.yul\":2041:2047   */\n      0x00\n        /* \"#utility.yul\":2074:2076   */\n      0x40\n        /* \"#utility.yul\":2068:2077   */\n      mload\n        /* \"#utility.yul\":2058:2077   */\n      swap1\n      pop\n        /* \"#utility.yul\":2008:2083   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":2089:2396   */\n    tag_29:\n        /* \"#utility.yul\":2150:2154   */\n      0x00\n        /* \"#utility.yul\":2240:2258   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2232:2238   */\n      dup3\n        /* \"#utility.yul\":2229:2259   */\n      gt\n        /* \"#utility.yul\":2226:2282   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":2262:2280   */\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2226:2282   */\n    tag_67:\n        /* \"#utility.yul\":2300:2329   */\n      tag_70\n        /* \"#utility.yul\":2322:2328   */\n      dup3\n        /* \"#utility.yul\":2300:2329   */\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2292:2329   */\n      swap1\n      pop\n        /* \"#utility.yul\":2384:2388   */\n      0x20\n        /* \"#utility.yul\":2378:2382   */\n      dup2\n        /* \"#utility.yul\":2374:2389   */\n      add\n        /* \"#utility.yul\":2366:2389   */\n      swap1\n      pop\n        /* \"#utility.yul\":2089:2396   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2402:2648   */\n    tag_21:\n        /* \"#utility.yul\":2441:2444   */\n      0x00\n        /* \"#utility.yul\":2460:2479   */\n      tag_73\n        /* \"#utility.yul\":2477:2478   */\n      dup3\n        /* \"#utility.yul\":2460:2479   */\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2455:2479   */\n      swap2\n      pop\n        /* \"#utility.yul\":2493:2512   */\n      tag_75\n        /* \"#utility.yul\":2510:2511   */\n      dup4\n        /* \"#utility.yul\":2493:2512   */\n      tag_74\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2488:2512   */\n      swap3\n      pop\n        /* \"#utility.yul\":2590:2591   */\n      dup3\n        /* \"#utility.yul\":2578:2588   */\n      0xffffffff\n        /* \"#utility.yul\":2574:2592   */\n      sub\n        /* \"#utility.yul\":2571:2572   */\n      dup3\n        /* \"#utility.yul\":2568:2593   */\n      gt\n        /* \"#utility.yul\":2565:2616   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":2596:2614   */\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2565:2616   */\n    tag_76:\n        /* \"#utility.yul\":2640:2641   */\n      dup3\n        /* \"#utility.yul\":2637:2638   */\n      dup3\n        /* \"#utility.yul\":2633:2642   */\n      add\n        /* \"#utility.yul\":2626:2642   */\n      swap1\n      pop\n        /* \"#utility.yul\":2402:2648   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2654:2750   */\n    tag_79:\n        /* \"#utility.yul\":2691:2698   */\n      0x00\n        /* \"#utility.yul\":2720:2744   */\n      tag_81\n        /* \"#utility.yul\":2738:2743   */\n      dup3\n        /* \"#utility.yul\":2720:2744   */\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2709:2744   */\n      swap1\n      pop\n        /* \"#utility.yul\":2654:2750   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2756:2882   */\n    tag_82:\n        /* \"#utility.yul\":2793:2800   */\n      0x00\n        /* \"#utility.yul\":2833:2875   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2826:2831   */\n      dup3\n        /* \"#utility.yul\":2822:2876   */\n      and\n        /* \"#utility.yul\":2811:2876   */\n      swap1\n      pop\n        /* \"#utility.yul\":2756:2882   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2888:2965   */\n    tag_84:\n        /* \"#utility.yul\":2925:2932   */\n      0x00\n        /* \"#utility.yul\":2954:2959   */\n      dup2\n        /* \"#utility.yul\":2943:2959   */\n      swap1\n      pop\n        /* \"#utility.yul\":2888:2965   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2971:3064   */\n    tag_74:\n        /* \"#utility.yul\":3007:3014   */\n      0x00\n        /* \"#utility.yul\":3047:3057   */\n      0xffffffff\n        /* \"#utility.yul\":3040:3045   */\n      dup3\n        /* \"#utility.yul\":3036:3058   */\n      and\n        /* \"#utility.yul\":3025:3058   */\n      swap1\n      pop\n        /* \"#utility.yul\":2971:3064   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3070:3224   */\n    tag_35:\n        /* \"#utility.yul\":3154:3160   */\n      dup3\n        /* \"#utility.yul\":3149:3152   */\n      dup2\n        /* \"#utility.yul\":3144:3147   */\n      dup4\n        /* \"#utility.yul\":3131:3161   */\n      calldatacopy\n        /* \"#utility.yul\":3216:3217   */\n      0x00\n        /* \"#utility.yul\":3207:3213   */\n      dup4\n        /* \"#utility.yul\":3202:3205   */\n      dup4\n        /* \"#utility.yul\":3198:3214   */\n      add\n        /* \"#utility.yul\":3191:3218   */\n      mstore\n        /* \"#utility.yul\":3070:3224   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3511   */\n    tag_64:\n        /* \"#utility.yul\":3313:3340   */\n      tag_89\n        /* \"#utility.yul\":3335:3339   */\n      dup3\n        /* \"#utility.yul\":3313:3340   */\n      tag_71\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":3305:3311   */\n      dup2\n        /* \"#utility.yul\":3301:3341   */\n      add\n        /* \"#utility.yul\":3443:3449   */\n      dup2\n        /* \"#utility.yul\":3431:3441   */\n      dup2\n        /* \"#utility.yul\":3428:3450   */\n      lt\n        /* \"#utility.yul\":3407:3425   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3395:3405   */\n      dup3\n        /* \"#utility.yul\":3392:3426   */\n      gt\n        /* \"#utility.yul\":3389:3451   */\n      or\n        /* \"#utility.yul\":3386:3474   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":3454:3472   */\n      tag_91\n      tag_69\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":3386:3474   */\n    tag_90:\n        /* \"#utility.yul\":3494:3504   */\n      dup1\n        /* \"#utility.yul\":3490:3492   */\n      0x40\n        /* \"#utility.yul\":3483:3505   */\n      mstore\n        /* \"#utility.yul\":3273:3511   */\n      pop\n        /* \"#utility.yul\":3230:3511   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3517:3697   */\n    tag_78:\n        /* \"#utility.yul\":3565:3642   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3562:3563   */\n      0x00\n        /* \"#utility.yul\":3555:3643   */\n      mstore\n        /* \"#utility.yul\":3662:3666   */\n      0x11\n        /* \"#utility.yul\":3659:3660   */\n      0x04\n        /* \"#utility.yul\":3652:3667   */\n      mstore\n        /* \"#utility.yul\":3686:3690   */\n      0x24\n        /* \"#utility.yul\":3683:3684   */\n      0x00\n        /* \"#utility.yul\":3676:3691   */\n      revert\n        /* \"#utility.yul\":3703:3883   */\n    tag_13:\n        /* \"#utility.yul\":3751:3828   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3748:3749   */\n      0x00\n        /* \"#utility.yul\":3741:3829   */\n      mstore\n        /* \"#utility.yul\":3848:3852   */\n      0x32\n        /* \"#utility.yul\":3845:3846   */\n      0x04\n        /* \"#utility.yul\":3838:3853   */\n      mstore\n        /* \"#utility.yul\":3872:3876   */\n      0x24\n        /* \"#utility.yul\":3869:3870   */\n      0x00\n        /* \"#utility.yul\":3862:3877   */\n      revert\n        /* \"#utility.yul\":3889:4069   */\n    tag_69:\n        /* \"#utility.yul\":3937:4014   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3934:3935   */\n      0x00\n        /* \"#utility.yul\":3927:4015   */\n      mstore\n        /* \"#utility.yul\":4034:4038   */\n      0x41\n        /* \"#utility.yul\":4031:4032   */\n      0x04\n        /* \"#utility.yul\":4024:4039   */\n      mstore\n        /* \"#utility.yul\":4058:4062   */\n      0x24\n        /* \"#utility.yul\":4055:4056   */\n      0x00\n        /* \"#utility.yul\":4048:4063   */\n      revert\n        /* \"#utility.yul\":4075:4192   */\n    tag_44:\n        /* \"#utility.yul\":4184:4185   */\n      0x00\n        /* \"#utility.yul\":4181:4182   */\n      dup1\n        /* \"#utility.yul\":4174:4186   */\n      revert\n        /* \"#utility.yul\":4198:4315   */\n    tag_33:\n        /* \"#utility.yul\":4307:4308   */\n      0x00\n        /* \"#utility.yul\":4304:4305   */\n      dup1\n        /* \"#utility.yul\":4297:4309   */\n      revert\n        /* \"#utility.yul\":4321:4438   */\n    tag_58:\n        /* \"#utility.yul\":4430:4431   */\n      0x00\n        /* \"#utility.yul\":4427:4428   */\n      dup1\n        /* \"#utility.yul\":4420:4432   */\n      revert\n        /* \"#utility.yul\":4444:4561   */\n    tag_53:\n        /* \"#utility.yul\":4553:4554   */\n      0x00\n        /* \"#utility.yul\":4550:4551   */\n      dup1\n        /* \"#utility.yul\":4543:4555   */\n      revert\n        /* \"#utility.yul\":4567:4669   */\n    tag_71:\n        /* \"#utility.yul\":4608:4614   */\n      0x00\n        /* \"#utility.yul\":4659:4661   */\n      0x1f\n        /* \"#utility.yul\":4655:4662   */\n      not\n        /* \"#utility.yul\":4650:4652   */\n      0x1f\n        /* \"#utility.yul\":4643:4648   */\n      dup4\n        /* \"#utility.yul\":4639:4653   */\n      add\n        /* \"#utility.yul\":4635:4663   */\n      and\n        /* \"#utility.yul\":4625:4663   */\n      swap1\n      pop\n        /* \"#utility.yul\":4567:4669   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4675:4797   */\n    tag_39:\n        /* \"#utility.yul\":4748:4772   */\n      tag_101\n        /* \"#utility.yul\":4766:4771   */\n      dup2\n        /* \"#utility.yul\":4748:4772   */\n      tag_79\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":4741:4746   */\n      dup2\n        /* \"#utility.yul\":4738:4773   */\n      eq\n        /* \"#utility.yul\":4728:4791   */\n      tag_102\n      jumpi\n        /* \"#utility.yul\":4787:4788   */\n      0x00\n        /* \"#utility.yul\":4784:4785   */\n      dup1\n        /* \"#utility.yul\":4777:4789   */\n      revert\n        /* \"#utility.yul\":4728:4791   */\n    tag_102:\n        /* \"#utility.yul\":4675:4797   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4803:4925   */\n    tag_49:\n        /* \"#utility.yul\":4876:4900   */\n      tag_104\n        /* \"#utility.yul\":4894:4899   */\n      dup2\n        /* \"#utility.yul\":4876:4900   */\n      tag_84\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":4869:4874   */\n      dup2\n        /* \"#utility.yul\":4866:4901   */\n      eq\n        /* \"#utility.yul\":4856:4919   */\n      tag_105\n      jumpi\n        /* \"#utility.yul\":4915:4916   */\n      0x00\n        /* \"#utility.yul\":4912:4913   */\n      dup1\n        /* \"#utility.yul\":4905:4917   */\n      revert\n        /* \"#utility.yul\":4856:4919   */\n    tag_105:\n        /* \"#utility.yul\":4803:4925   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204cbda98cef232cccc2f23d6052d3b177be34ee12ec781d93a4ad699408162ebd64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610626806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c0ee0b8a14610030575b600080fd5b61004a60048036038101906100459190610385565b61004c565b005b61005461028e565b83816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508281602001818152505081816040018190525060006018836003815181106100b7576100b661053f565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c60e01c60108460028151811061011e5761011d61053f565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c60e01c6008856001815181106101855761018461053f565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c60e01c856000815181106101ea576101e961053f565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191660e01c610224919061044a565b61022e919061044a565b610238919061044a565b90508060e01b82606001907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250505050505050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525090565b60006102fe6102f984610419565b6103f4565b90508281526020810184848401111561031a576103196105a2565b5b6103258482856104d0565b509392505050565b60008135905061033c816105c2565b92915050565b600082601f8301126103575761035661059d565b5b81356103678482602086016102eb565b91505092915050565b60008135905061037f816105d9565b92915050565b60008060006060848603121561039e5761039d6105ac565b5b60006103ac8682870161032d565b93505060206103bd86828701610370565b925050604084013567ffffffffffffffff8111156103de576103dd6105a7565b5b6103ea86828701610342565b9150509250925092565b60006103fe61040f565b905061040a82826104df565b919050565b6000604051905090565b600067ffffffffffffffff8211156104345761043361056e565b5b61043d826105b1565b9050602081019050919050565b6000610455826104c0565b9150610460836104c0565b92508263ffffffff0382111561047957610478610510565b5b828201905092915050565b600061048f82610496565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b82818337600083830152505050565b6104e8826105b1565b810181811067ffffffffffffffff821117156105075761050661056e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6105cb81610484565b81146105d657600080fd5b50565b6105e2816104b6565b81146105ed57600080fd5b5056fea26469706673582212204cbda98cef232cccc2f23d6052d3b177be34ee12ec781d93a4ad699408162ebd64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x626 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC0EE0B8A EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x385 JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x54 PUSH2 0x28E JUMP JUMPDEST DUP4 DUP2 PUSH1 0x0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x40 ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 PUSH1 0x18 DUP4 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0xB7 JUMPI PUSH2 0xB6 PUSH2 0x53F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHR PUSH1 0xE0 SHR PUSH1 0x10 DUP5 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x11E JUMPI PUSH2 0x11D PUSH2 0x53F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHR PUSH1 0xE0 SHR PUSH1 0x8 DUP6 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x185 JUMPI PUSH2 0x184 PUSH2 0x53F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHR PUSH1 0xE0 SHR DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1EA JUMPI PUSH2 0x1E9 PUSH2 0x53F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0xE0 SHR PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x44A JUMP JUMPDEST PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x44A JUMP JUMPDEST PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x44A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xE0 SHL DUP3 PUSH1 0x60 ADD SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FE PUSH2 0x2F9 DUP5 PUSH2 0x419 JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x31A JUMPI PUSH2 0x319 PUSH2 0x5A2 JUMP JUMPDEST JUMPDEST PUSH2 0x325 DUP5 DUP3 DUP6 PUSH2 0x4D0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33C DUP2 PUSH2 0x5C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x357 JUMPI PUSH2 0x356 PUSH2 0x59D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x367 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x37F DUP2 PUSH2 0x5D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x39E JUMPI PUSH2 0x39D PUSH2 0x5AC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3AC DUP7 DUP3 DUP8 ADD PUSH2 0x32D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3BD DUP7 DUP3 DUP8 ADD PUSH2 0x370 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3DE JUMPI PUSH2 0x3DD PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST PUSH2 0x3EA DUP7 DUP3 DUP8 ADD PUSH2 0x342 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FE PUSH2 0x40F JUMP JUMPDEST SWAP1 POP PUSH2 0x40A DUP3 DUP3 PUSH2 0x4DF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x434 JUMPI PUSH2 0x433 PUSH2 0x56E JUMP JUMPDEST JUMPDEST PUSH2 0x43D DUP3 PUSH2 0x5B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x455 DUP3 PUSH2 0x4C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x460 DUP4 PUSH2 0x4C0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH4 0xFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x479 JUMPI PUSH2 0x478 PUSH2 0x510 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48F DUP3 PUSH2 0x496 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x4E8 DUP3 PUSH2 0x5B1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x507 JUMPI PUSH2 0x506 PUSH2 0x56E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5CB DUP2 PUSH2 0x484 JUMP JUMPDEST DUP2 EQ PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5E2 DUP2 PUSH2 0x4B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0xBD 0xA9 DUP13 0xEF 0x23 0x2C 0xCC 0xC2 CALLCODE RETURNDATASIZE PUSH1 0x52 0xD3 0xB1 PUSH24 0xBE34EE12EC781D93A4AD699408162EBD64736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "631:947:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@tokenFallback_119": {
									"entryPoint": 76,
									"id": 119,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 747,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_memory": {
									"entryPoint": 1012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1039,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 1049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint32": {
									"entryPoint": 1098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 1216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 1232,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 1247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 1296,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1343,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1390,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1437,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1442,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1447,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1452,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4928:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:327:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "280:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:1"
															},
															"nodeType": "YulIf",
															"src": "249:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "394:3:1"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "399:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "404:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "370:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "370:41:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:1",
														"type": ""
													}
												],
												"src": "7:410:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "507:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "494:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "485:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "523:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "453:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "461:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:1",
														"type": ""
													}
												],
												"src": "423:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "642:277:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "691:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "693:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "693:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "693:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "670:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "678:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "666:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "666:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "685:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "662:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "662:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "655:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:35:1"
															},
															"nodeType": "YulIf",
															"src": "652:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "783:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "810:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "797:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "797:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "787:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "826:87:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "894:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "882:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "882:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "901:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "909:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "835:46:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:78:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "826:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "620:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "628:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "636:5:1",
														"type": ""
													}
												],
												"src": "581:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "977:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "987:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1009:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "996:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "996:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "987:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1052:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1025:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1025:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1025:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "955:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "963:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "971:5:1",
														"type": ""
													}
												],
												"src": "925:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1179:688:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1225:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1227:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1227:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1227:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1200:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1209:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1196:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1196:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1221:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1192:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1192:32:1"
															},
															"nodeType": "YulIf",
															"src": "1189:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1318:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1333:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1347:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1337:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1362:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1397:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1408:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1393:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1393:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1417:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1372:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1372:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1362:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1445:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1460:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1474:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1464:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1490:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1525:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1536:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1521:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1521:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1545:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1500:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1500:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1490:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1573:287:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1588:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1619:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1630:2:1",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1615:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1615:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1602:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1602:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1592:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1681:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1683:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1683:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1683:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1653:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1661:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1650:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1650:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "1647:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1778:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1822:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1833:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1818:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1818:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1842:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1788:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1788:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1778:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1133:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1144:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1156:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1164:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1172:6:1",
														"type": ""
													}
												],
												"src": "1070:797:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1914:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1924:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1934:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1934:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1924:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1983:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1991:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1963:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1963:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1963:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1898:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1907:6:1",
														"type": ""
													}
												],
												"src": "1873:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2048:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2058:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2074:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2068:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2068:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2058:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2041:6:1",
														"type": ""
													}
												],
												"src": "2008:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2155:241:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2260:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2262:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2262:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2262:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2232:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2240:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2229:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2229:30:1"
															},
															"nodeType": "YulIf",
															"src": "2226:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2292:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2322:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2300:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2300:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2292:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2366:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2378:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2384:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2374:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2374:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2366:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2139:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2150:4:1",
														"type": ""
													}
												],
												"src": "2089:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2445:203:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2455:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2477:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "2460:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2460:19:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2455:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2488:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2510:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "2493:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2493:19:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2488:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2594:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2596:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2596:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2596:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2571:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2578:10:1",
																				"type": "",
																				"value": "0xffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2590:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2574:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2574:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2568:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2568:25:1"
															},
															"nodeType": "YulIf",
															"src": "2565:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2626:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2637:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2640:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2633:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2633:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2626:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2432:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2435:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2441:3:1",
														"type": ""
													}
												],
												"src": "2402:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2699:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2709:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2738:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2720:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2720:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2709:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2681:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2691:7:1",
														"type": ""
													}
												],
												"src": "2654:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2801:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2811:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2826:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2822:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2822:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2811:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2783:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2793:7:1",
														"type": ""
													}
												],
												"src": "2756:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2933:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2943:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2954:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2943:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2915:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2925:7:1",
														"type": ""
													}
												],
												"src": "2888:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3015:49:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3025:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3040:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3047:10:1",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3036:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3036:22:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3025:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2997:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3007:7:1",
														"type": ""
													}
												],
												"src": "2971:93:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3121:103:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3144:3:1"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3149:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3154:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3131:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3131:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3131:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3202:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3207:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3198:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3198:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3216:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3191:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3191:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3191:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3103:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3108:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3113:6:1",
														"type": ""
													}
												],
												"src": "3070:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3273:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3283:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3305:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3335:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3313:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3313:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3301:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3301:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3287:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3452:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3454:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3454:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3454:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3395:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3407:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3392:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3392:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3431:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3443:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3428:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3428:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3389:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3389:62:1"
															},
															"nodeType": "YulIf",
															"src": "3386:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3490:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3494:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3483:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3483:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3483:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3259:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3267:4:1",
														"type": ""
													}
												],
												"src": "3230:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3545:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3562:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3565:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3555:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3555:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3555:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3659:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3662:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3652:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3652:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3652:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3683:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3676:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3676:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3676:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3517:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3731:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3748:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3751:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3741:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3741:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3741:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3845:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3848:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3838:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3838:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3838:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3869:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3872:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3862:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3862:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3862:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "3703:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3917:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3934:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3937:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3927:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3927:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3927:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4031:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4034:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4024:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4024:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4024:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4055:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4058:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4048:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4048:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4048:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3889:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4164:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4181:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4184:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4174:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4174:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4174:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "4075:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4287:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4304:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4307:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4297:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4297:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4297:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "4198:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4410:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4427:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4430:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4420:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4420:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4420:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4321:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4533:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4550:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4553:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4543:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4543:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4543:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4444:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4615:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4625:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4643:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4650:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4639:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4639:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4659:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4655:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4655:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4635:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4635:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4625:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4598:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4608:6:1",
														"type": ""
													}
												],
												"src": "4567:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4718:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4775:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4784:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4787:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4777:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4777:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4777:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4741:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4766:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4748:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4748:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4738:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4738:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4731:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4731:43:1"
															},
															"nodeType": "YulIf",
															"src": "4728:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4711:5:1",
														"type": ""
													}
												],
												"src": "4675:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4846:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4903:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4912:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4915:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4905:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4905:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4905:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4869:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4894:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4876:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4876:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4866:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4866:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4859:43:1"
															},
															"nodeType": "YulIf",
															"src": "4856:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4839:5:1",
														"type": ""
													}
												],
												"src": "4803:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function checked_add_t_uint32(x, y) -> sum {\n        x := cleanup_t_uint32(x)\n        y := cleanup_t_uint32(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c0ee0b8a14610030575b600080fd5b61004a60048036038101906100459190610385565b61004c565b005b61005461028e565b83816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508281602001818152505081816040018190525060006018836003815181106100b7576100b661053f565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c60e01c60108460028151811061011e5761011d61053f565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c60e01c6008856001815181106101855761018461053f565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c60e01c856000815181106101ea576101e961053f565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191660e01c610224919061044a565b61022e919061044a565b610238919061044a565b90508060e01b82606001907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250505050505050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525090565b60006102fe6102f984610419565b6103f4565b90508281526020810184848401111561031a576103196105a2565b5b6103258482856104d0565b509392505050565b60008135905061033c816105c2565b92915050565b600082601f8301126103575761035661059d565b5b81356103678482602086016102eb565b91505092915050565b60008135905061037f816105d9565b92915050565b60008060006060848603121561039e5761039d6105ac565b5b60006103ac8682870161032d565b93505060206103bd86828701610370565b925050604084013567ffffffffffffffff8111156103de576103dd6105a7565b5b6103ea86828701610342565b9150509250925092565b60006103fe61040f565b905061040a82826104df565b919050565b6000604051905090565b600067ffffffffffffffff8211156104345761043361056e565b5b61043d826105b1565b9050602081019050919050565b6000610455826104c0565b9150610460836104c0565b92508263ffffffff0382111561047957610478610510565b5b828201905092915050565b600061048f82610496565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b82818337600083830152505050565b6104e8826105b1565b810181811067ffffffffffffffff821117156105075761050661056e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6105cb81610484565b81146105d657600080fd5b50565b6105e2816104b6565b81146105ed57600080fd5b5056fea26469706673582212204cbda98cef232cccc2f23d6052d3b177be34ee12ec781d93a4ad699408162ebd64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC0EE0B8A EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x385 JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x54 PUSH2 0x28E JUMP JUMPDEST DUP4 DUP2 PUSH1 0x0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x40 ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 PUSH1 0x18 DUP4 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0xB7 JUMPI PUSH2 0xB6 PUSH2 0x53F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHR PUSH1 0xE0 SHR PUSH1 0x10 DUP5 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x11E JUMPI PUSH2 0x11D PUSH2 0x53F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHR PUSH1 0xE0 SHR PUSH1 0x8 DUP6 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x185 JUMPI PUSH2 0x184 PUSH2 0x53F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHR PUSH1 0xE0 SHR DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1EA JUMPI PUSH2 0x1E9 PUSH2 0x53F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0xE0 SHR PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x44A JUMP JUMPDEST PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x44A JUMP JUMPDEST PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x44A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xE0 SHL DUP3 PUSH1 0x60 ADD SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FE PUSH2 0x2F9 DUP5 PUSH2 0x419 JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x31A JUMPI PUSH2 0x319 PUSH2 0x5A2 JUMP JUMPDEST JUMPDEST PUSH2 0x325 DUP5 DUP3 DUP6 PUSH2 0x4D0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33C DUP2 PUSH2 0x5C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x357 JUMPI PUSH2 0x356 PUSH2 0x59D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x367 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x37F DUP2 PUSH2 0x5D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x39E JUMPI PUSH2 0x39D PUSH2 0x5AC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3AC DUP7 DUP3 DUP8 ADD PUSH2 0x32D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3BD DUP7 DUP3 DUP8 ADD PUSH2 0x370 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3DE JUMPI PUSH2 0x3DD PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST PUSH2 0x3EA DUP7 DUP3 DUP8 ADD PUSH2 0x342 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FE PUSH2 0x40F JUMP JUMPDEST SWAP1 POP PUSH2 0x40A DUP3 DUP3 PUSH2 0x4DF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x434 JUMPI PUSH2 0x433 PUSH2 0x56E JUMP JUMPDEST JUMPDEST PUSH2 0x43D DUP3 PUSH2 0x5B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x455 DUP3 PUSH2 0x4C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x460 DUP4 PUSH2 0x4C0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH4 0xFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x479 JUMPI PUSH2 0x478 PUSH2 0x510 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48F DUP3 PUSH2 0x496 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x4E8 DUP3 PUSH2 0x5B1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x507 JUMPI PUSH2 0x506 PUSH2 0x56E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5CB DUP2 PUSH2 0x484 JUMP JUMPDEST DUP2 EQ PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5E2 DUP2 PUSH2 0x4B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0xBD 0xA9 DUP13 0xEF 0x23 0x2C 0xCC 0xC2 CALLCODE RETURNDATASIZE PUSH1 0x52 0xD3 0xB1 PUSH24 0xBE34EE12EC781D93A4AD699408162EBD64736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "631:947:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;942:634;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;1085:16;;:::i;:::-;1124:4;1111:3;:10;;:17;;;;;;;;;;;1150:5;1138:3;:9;;:17;;;;;1176:4;1165:3;:8;;:15;;;;1363:8;1537:2;1525:4;1530:1;1525:7;;;;;;;;:::i;:::-;;;;;;;;;;1518:15;;;:21;;;;;1511:29;;1493:2;1481:4;1486:1;1481:7;;;;;;;;:::i;:::-;;;;;;;;;;1474:15;;;:21;;;;;1467:29;;1450:1;1438:4;1443:1;1438:7;;;;;;;;:::i;:::-;;;;;;;;;;1431:15;;;:20;;;;;1424:28;;1400:4;1405:1;1400:7;;;;;;;;:::i;:::-;;;;;;;;;;1393:15;;;1386:23;;:66;;;;:::i;:::-;:110;;;;:::i;:::-;:154;;;;:::i;:::-;1363:177;;1567:1;1560:9;;1550:3;:7;;:19;;;;;;;;;;;;;1075:501;;942:634;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:410:1:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;581:338::-;636:5;685:3;678:4;670:6;666:17;662:27;652:122;;693:79;;:::i;:::-;652:122;810:6;797:20;835:78;909:3;901:6;894:4;886:6;882:17;835:78;:::i;:::-;826:87;;642:277;581:338;;;;:::o;925:139::-;971:5;1009:6;996:20;987:29;;1025:33;1052:5;1025:33;:::i;:::-;925:139;;;;:::o;1070:797::-;1156:6;1164;1172;1221:2;1209:9;1200:7;1196:23;1192:32;1189:119;;;1227:79;;:::i;:::-;1189:119;1347:1;1372:53;1417:7;1408:6;1397:9;1393:22;1372:53;:::i;:::-;1362:63;;1318:117;1474:2;1500:53;1545:7;1536:6;1525:9;1521:22;1500:53;:::i;:::-;1490:63;;1445:118;1630:2;1619:9;1615:18;1602:32;1661:18;1653:6;1650:30;1647:117;;;1683:79;;:::i;:::-;1647:117;1788:62;1842:7;1833:6;1822:9;1818:22;1788:62;:::i;:::-;1778:72;;1573:287;1070:797;;;;;:::o;1873:129::-;1907:6;1934:20;;:::i;:::-;1924:30;;1963:33;1991:4;1983:6;1963:33;:::i;:::-;1873:129;;;:::o;2008:75::-;2041:6;2074:2;2068:9;2058:19;;2008:75;:::o;2089:307::-;2150:4;2240:18;2232:6;2229:30;2226:56;;;2262:18;;:::i;:::-;2226:56;2300:29;2322:6;2300:29;:::i;:::-;2292:37;;2384:4;2378;2374:15;2366:23;;2089:307;;;:::o;2402:246::-;2441:3;2460:19;2477:1;2460:19;:::i;:::-;2455:24;;2493:19;2510:1;2493:19;:::i;:::-;2488:24;;2590:1;2578:10;2574:18;2571:1;2568:25;2565:51;;;2596:18;;:::i;:::-;2565:51;2640:1;2637;2633:9;2626:16;;2402:246;;;;:::o;2654:96::-;2691:7;2720:24;2738:5;2720:24;:::i;:::-;2709:35;;2654:96;;;:::o;2756:126::-;2793:7;2833:42;2826:5;2822:54;2811:65;;2756:126;;;:::o;2888:77::-;2925:7;2954:5;2943:16;;2888:77;;;:::o;2971:93::-;3007:7;3047:10;3040:5;3036:22;3025:33;;2971:93;;;:::o;3070:154::-;3154:6;3149:3;3144;3131:30;3216:1;3207:6;3202:3;3198:16;3191:27;3070:154;;;:::o;3230:281::-;3313:27;3335:4;3313:27;:::i;:::-;3305:6;3301:40;3443:6;3431:10;3428:22;3407:18;3395:10;3392:34;3389:62;3386:88;;;3454:18;;:::i;:::-;3386:88;3494:10;3490:2;3483:22;3273:238;3230:281;;:::o;3517:180::-;3565:77;3562:1;3555:88;3662:4;3659:1;3652:15;3686:4;3683:1;3676:15;3703:180;3751:77;3748:1;3741:88;3848:4;3845:1;3838:15;3872:4;3869:1;3862:15;3889:180;3937:77;3934:1;3927:88;4034:4;4031:1;4024:15;4058:4;4055:1;4048:15;4075:117;4184:1;4181;4174:12;4198:117;4307:1;4304;4297:12;4321:117;4430:1;4427;4420:12;4444:117;4553:1;4550;4543:12;4567:102;4608:6;4659:2;4655:7;4650:2;4643:5;4639:14;4635:28;4625:38;;4567:102;;;:::o;4675:122::-;4748:24;4766:5;4748:24;:::i;:::-;4741:5;4738:35;4728:63;;4787:1;4784;4777:12;4728:63;4675:122;:::o;4803:::-;4876:24;4894:5;4876:24;:::i;:::-;4869:5;4866:35;4856:63;;4915:1;4912;4905:12;4856:63;4803:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "314800",
								"executionCost": "355",
								"totalCost": "315155"
							},
							"external": {
								"tokenFallback(address,uint256,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 631,
									"end": 1578,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204cbda98cef232cccc2f23d6052d3b177be34ee12ec781d93a4ad699408162ebd64736f6c63430008070033",
									".code": [
										{
											"begin": 631,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "C0EE0B8A"
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1085,
											"end": 1101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1085,
											"end": 1101,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1101,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1085,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1128,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1121,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1128,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1111,
											"end": 1128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1128,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1111,
											"end": 1128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1173,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1173,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1363,
											"end": 1371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1539,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1525,
											"end": 1529,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1533,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1518,
											"end": 1533,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1539,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1518,
											"end": 1539,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1539,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1495,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1481,
											"end": 1485,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1486,
											"end": 1487,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1474,
											"end": 1489,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1474,
											"end": 1489,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1474,
											"end": 1489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1474,
											"end": 1495,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1474,
											"end": 1495,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1474,
											"end": 1495,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1474,
											"end": 1495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1474,
											"end": 1495,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1496,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1467,
											"end": 1496,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1451,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1438,
											"end": 1442,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1444,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1451,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1431,
											"end": 1451,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1451,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1452,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1424,
											"end": 1452,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1404,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1393,
											"end": 1408,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1393,
											"end": 1408,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1393,
											"end": 1408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1409,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1386,
											"end": 1409,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1386,
											"end": 1452,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1386,
											"end": 1452,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1386,
											"end": 1496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1386,
											"end": 1496,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1386,
											"end": 1496,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1386,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1386,
											"end": 1540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1386,
											"end": 1540,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1386,
											"end": 1540,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1386,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1363,
											"end": 1540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1363,
											"end": 1540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1567,
											"end": 1568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1553,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1557,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1550,
											"end": 1557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1569,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1550,
											"end": 1569,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1569,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1550,
											"end": 1569,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "10"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 84,
											"end": 89,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 249,
											"end": 361,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 249,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 249,
											"end": 361,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 404,
											"end": 410,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 399,
											"end": 402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 394,
											"end": 397,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 90,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 469,
											"end": 474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 494,
											"end": 514,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 485,
											"end": 514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 485,
											"end": 514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 581,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 581,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 636,
											"end": 641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 688,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 678,
											"end": 682,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 670,
											"end": 676,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 666,
											"end": 683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 662,
											"end": 689,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 652,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 652,
											"end": 774,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 693,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 652,
											"end": 774,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 652,
											"end": 774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 810,
											"end": 816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 797,
											"end": 817,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 909,
											"end": 912,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 901,
											"end": 907,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 894,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 892,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 882,
											"end": 899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 826,
											"end": 913,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 826,
											"end": 913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 642,
											"end": 919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 581,
											"end": 919,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 581,
											"end": 919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 581,
											"end": 919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 581,
											"end": 919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 581,
											"end": 919,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 971,
											"end": 976,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1052,
											"end": 1057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1070,
											"end": 1867,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1070,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1162,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1170,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1221,
											"end": 1223,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1209,
											"end": 1218,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1207,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1219,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1224,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1308,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1189,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1227,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1227,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1227,
											"end": 1306,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1227,
											"end": 1306,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1227,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1189,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1372,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1417,
											"end": 1424,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1397,
											"end": 1406,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1372,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1372,
											"end": 1425,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1372,
											"end": 1425,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1372,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1425,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1476,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1545,
											"end": 1552,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1534,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1543,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1500,
											"end": 1553,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1500,
											"end": 1553,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1500,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1490,
											"end": 1553,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1490,
											"end": 1553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1632,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1628,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1633,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1634,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1679,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1653,
											"end": 1659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1680,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1647,
											"end": 1764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1683,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1683,
											"end": 1762,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1683,
											"end": 1762,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1683,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1764,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1647,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1842,
											"end": 1849,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1839,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1822,
											"end": 1831,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1788,
											"end": 1850,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1788,
											"end": 1850,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1788,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1850,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1850,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1573,
											"end": 1860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1867,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1867,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1867,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1867,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1873,
											"end": 2002,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1873,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1934,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1934,
											"end": 1954,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1934,
											"end": 1954,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1934,
											"end": 1954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1991,
											"end": 1995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1963,
											"end": 1996,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1963,
											"end": 1996,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1963,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 2002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 2002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 2002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 2002,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2008,
											"end": 2083,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2008,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2068,
											"end": 2077,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2083,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2089,
											"end": 2396,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2089,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2154,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2258,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2232,
											"end": 2238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2259,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2282,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2226,
											"end": 2282,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2262,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2262,
											"end": 2280,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2262,
											"end": 2280,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2262,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2226,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2300,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2300,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2300,
											"end": 2329,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2300,
											"end": 2329,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2300,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2292,
											"end": 2329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2292,
											"end": 2329,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2388,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2378,
											"end": 2382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2374,
											"end": 2389,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2366,
											"end": 2389,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2366,
											"end": 2389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2396,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2396,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2396,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2402,
											"end": 2648,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2402,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2477,
											"end": 2478,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2460,
											"end": 2479,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2460,
											"end": 2479,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2460,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2510,
											"end": 2511,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2493,
											"end": 2512,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2493,
											"end": 2512,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2493,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2591,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2588,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2571,
											"end": 2572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2593,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2616,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2565,
											"end": 2616,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2596,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2596,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2596,
											"end": 2614,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2596,
											"end": 2614,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2596,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2616,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2565,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2637,
											"end": 2638,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2642,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2648,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2648,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2648,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2654,
											"end": 2750,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2654,
											"end": 2750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2691,
											"end": 2698,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2720,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2738,
											"end": 2743,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2720,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2720,
											"end": 2744,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2720,
											"end": 2744,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2720,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 2744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 2744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2750,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2750,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2750,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2756,
											"end": 2882,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2756,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 2800,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2875,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2826,
											"end": 2831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2822,
											"end": 2876,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2811,
											"end": 2876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2811,
											"end": 2876,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2882,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2882,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2888,
											"end": 2965,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2888,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2959,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 2965,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 2965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 2965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 2965,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2971,
											"end": 3064,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2971,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3047,
											"end": 3057,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3040,
											"end": 3045,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3058,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3025,
											"end": 3058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3025,
											"end": 3058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2971,
											"end": 3064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2971,
											"end": 3064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2971,
											"end": 3064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2971,
											"end": 3064,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3070,
											"end": 3224,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3070,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3154,
											"end": 3160,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3147,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3161,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3207,
											"end": 3213,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3202,
											"end": 3205,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3218,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3224,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3230,
											"end": 3511,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3230,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3313,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3335,
											"end": 3339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3313,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3313,
											"end": 3340,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3313,
											"end": 3340,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3313,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3305,
											"end": 3311,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3341,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3431,
											"end": 3441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3450,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3407,
											"end": 3425,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3395,
											"end": 3405,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3426,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3451,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3386,
											"end": 3474,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3386,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3386,
											"end": 3474,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3454,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3454,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3454,
											"end": 3472,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3454,
											"end": 3472,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3454,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3386,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3386,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3504,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3492,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3483,
											"end": 3505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3511,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3517,
											"end": 3697,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3517,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3642,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3562,
											"end": 3563,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3662,
											"end": 3666,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3659,
											"end": 3660,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3652,
											"end": 3667,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3690,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3683,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3691,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3703,
											"end": 3883,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3703,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3828,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3748,
											"end": 3749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3848,
											"end": 3852,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3845,
											"end": 3846,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3838,
											"end": 3853,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3876,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3869,
											"end": 3870,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3862,
											"end": 3877,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3889,
											"end": 4069,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3889,
											"end": 4069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3937,
											"end": 4014,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3927,
											"end": 4015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4034,
											"end": 4038,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4031,
											"end": 4032,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4024,
											"end": 4039,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4062,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4055,
											"end": 4056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4063,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4192,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4075,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4184,
											"end": 4185,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4181,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4186,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4198,
											"end": 4315,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4198,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4307,
											"end": 4308,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4304,
											"end": 4305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4297,
											"end": 4309,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4438,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4321,
											"end": 4438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4430,
											"end": 4431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4427,
											"end": 4428,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4432,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4561,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 4444,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4553,
											"end": 4554,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4550,
											"end": 4551,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4543,
											"end": 4555,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4567,
											"end": 4669,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4567,
											"end": 4669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4659,
											"end": 4661,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4655,
											"end": 4662,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4650,
											"end": 4652,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4643,
											"end": 4648,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4639,
											"end": 4653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4635,
											"end": 4663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4625,
											"end": 4663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4625,
											"end": 4663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4567,
											"end": 4669,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4567,
											"end": 4669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4567,
											"end": 4669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4567,
											"end": 4669,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4675,
											"end": 4797,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4675,
											"end": 4797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4766,
											"end": 4771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4748,
											"end": 4772,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4748,
											"end": 4772,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4748,
											"end": 4772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4746,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4738,
											"end": 4773,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4728,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4728,
											"end": 4791,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4788,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4784,
											"end": 4785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4777,
											"end": 4789,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4728,
											"end": 4791,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4728,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4675,
											"end": 4797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4675,
											"end": 4797,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4803,
											"end": 4925,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4803,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4876,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4894,
											"end": 4899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4876,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4876,
											"end": 4900,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4876,
											"end": 4900,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4876,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4869,
											"end": 4874,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4866,
											"end": 4901,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4856,
											"end": 4919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4915,
											"end": 4916,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4912,
											"end": 4913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4905,
											"end": 4917,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4856,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4925,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"tokenFallback(address,uint256,bytes)": "c0ee0b8a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"ERC223 token compatible contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Tokens.sol\":\"ERC223ReceivingContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Tokens.sol\":{\"keccak256\":\"0x836f6849c73c58588062bc670f3fb05b0b1558bcae2ebf5fcaa49aa892a33d71\",\"license\":\"LGPL-3.0+\",\"urls\":[\"bzz-raw://dfc4c4e9529b7931363e5ed52b3d92a1db473d4d4f315544a7f91e39e9f1d02e\",\"dweb:/ipfs/QmVQpwWE7ZGCRRwcL7ShEkhrp9gywgEevXAQSi44pAr5Fg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "ERC223 token compatible contract",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Tokens.sol": {
				"ast": {
					"absolutePath": "contracts/Tokens.sol",
					"exportedSymbols": {
						"ERC20": [
							20
						],
						"ERC223ReceivingContract": [
							120
						]
					},
					"id": 121,
					"license": "LGPL-3.0+",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "98:23:0"
						},
						{
							"id": 2,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "122:33:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "157:259:0",
								"text": "Declare the ERC20 interface in order to handle ERC20 tokens transfers to\n and from the Mixer. Note that we only declare the functions we are\n interested in, namely, transferFrom() (used to do a Deposit), and\n transfer() (used to do a withdrawal)"
							},
							"fullyImplemented": false,
							"id": 20,
							"linearizedBaseContracts": [
								20
							],
							"name": "ERC20",
							"nameLocation": "434:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "23b872dd",
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "456:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "477:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "469:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "491:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "483:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "483:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "503:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "495:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "468:41:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "524:0:0"
									},
									"scope": 20,
									"src": "447:78:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "539:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "547:27:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "589:0:0"
									},
									"scope": 20,
									"src": "530:60:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 121,
							"src": "416:176:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 21,
								"nodeType": "StructuredDocumentation",
								"src": "594:37:0",
								"text": "ERC223 token compatible contract"
							},
							"fullyImplemented": true,
							"id": 120,
							"linearizedBaseContracts": [
								120
							],
							"name": "ERC223ReceivingContract",
							"nameLocation": "640:23:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC223ReceivingContract.Token",
									"id": 30,
									"members": [
										{
											"constant": false,
											"id": 23,
											"mutability": "mutable",
											"name": "sender",
											"nameLocation": "860:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "852:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 22,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "852:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 25,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "884:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "876:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 24,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "876:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 27,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "905:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "899:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 26,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "899:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 29,
											"mutability": "mutable",
											"name": "sig",
											"nameLocation": "926:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "919:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes4",
												"typeString": "bytes4"
											},
											"typeName": {
												"id": 28,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "919:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Token",
									"nameLocation": "836:5:0",
									"nodeType": "StructDefinition",
									"scope": 120,
									"src": "829:107:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "1075:501:0",
										"statements": [
											{
												"assignments": [
													41
												],
												"declarations": [
													{
														"constant": false,
														"id": 41,
														"mutability": "mutable",
														"name": "tkn",
														"nameLocation": "1098:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 118,
														"src": "1085:16:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Token_$30_memory_ptr",
															"typeString": "struct ERC223ReceivingContract.Token"
														},
														"typeName": {
															"id": 40,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 39,
																"name": "Token",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 30,
																"src": "1085:5:0"
															},
															"referencedDeclaration": 30,
															"src": "1085:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_$30_storage_ptr",
																"typeString": "struct ERC223ReceivingContract.Token"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 42,
												"nodeType": "VariableDeclarationStatement",
												"src": "1085:16:0"
											},
											{
												"expression": {
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 43,
															"name": "tkn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "1111:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_$30_memory_ptr",
																"typeString": "struct ERC223ReceivingContract.Token memory"
															}
														},
														"id": 45,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "1111:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 46,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "1124:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1111:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1111:17:0"
											},
											{
												"expression": {
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 49,
															"name": "tkn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "1138:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_$30_memory_ptr",
																"typeString": "struct ERC223ReceivingContract.Token memory"
															}
														},
														"id": 51,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 25,
														"src": "1138:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 52,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1150:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1138:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "1138:17:0"
											},
											{
												"expression": {
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 55,
															"name": "tkn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "1165:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_$30_memory_ptr",
																"typeString": "struct ERC223ReceivingContract.Token memory"
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 27,
														"src": "1165:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 58,
														"name": "data",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "1176:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "1165:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1165:15:0"
											},
											{
												"assignments": [
													62
												],
												"declarations": [
													{
														"constant": false,
														"id": 62,
														"mutability": "mutable",
														"name": "u",
														"nameLocation": "1370:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 118,
														"src": "1363:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 61,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "1363:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 108,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 67,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 36,
																					"src": "1400:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 69,
																				"indexExpression": {
																					"hexValue": "30",
																					"id": 68,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1405:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1400:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			],
																			"id": 66,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1393:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes4_$",
																				"typeString": "type(bytes4)"
																			},
																			"typeName": {
																				"id": 65,
																				"name": "bytes4",
																				"nodeType": "ElementaryTypeName",
																				"src": "1393:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 70,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1393:15:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1386:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 63,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1386:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1386:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 76,
																						"name": "data",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 36,
																						"src": "1438:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 78,
																					"indexExpression": {
																						"hexValue": "31",
																						"id": 77,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1443:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1438:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				],
																				"id": 75,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1431:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes4_$",
																					"typeString": "type(bytes4)"
																				},
																				"typeName": {
																					"id": 74,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "1431:6:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 79,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1431:15:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">>",
																		"rightExpression": {
																			"hexValue": "38",
																			"id": 80,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1450:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "1431:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"id": 73,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1424:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 72,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1424:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1424:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"src": "1386:66:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 88,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 36,
																					"src": "1481:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 90,
																				"indexExpression": {
																					"hexValue": "32",
																					"id": 89,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1486:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1481:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			],
																			"id": 87,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1474:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes4_$",
																				"typeString": "type(bytes4)"
																			},
																			"typeName": {
																				"id": 86,
																				"name": "bytes4",
																				"nodeType": "ElementaryTypeName",
																				"src": "1474:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 91,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1474:15:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3136",
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1493:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	"src": "1474:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1467:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint32_$",
																	"typeString": "type(uint32)"
																},
																"typeName": {
																	"id": 84,
																	"name": "uint32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1467:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1467:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "1386:110:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 100,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 36,
																				"src": "1525:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 102,
																			"indexExpression": {
																				"hexValue": "33",
																				"id": 101,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1530:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"value": "3"
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1525:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		],
																		"id": 99,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1518:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes4_$",
																			"typeString": "type(bytes4)"
																		},
																		"typeName": {
																			"id": 98,
																			"name": "bytes4",
																			"nodeType": "ElementaryTypeName",
																			"src": "1518:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1518:15:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3234",
																	"id": 104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1537:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_24_by_1",
																		"typeString": "int_const 24"
																	},
																	"value": "24"
																},
																"src": "1518:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1511:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint32_$",
																"typeString": "type(uint32)"
															},
															"typeName": {
																"id": 96,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "1511:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1511:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1386:154:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1363:177:0"
											},
											{
												"expression": {
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 109,
															"name": "tkn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "1550:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_$30_memory_ptr",
																"typeString": "struct ERC223ReceivingContract.Token memory"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "sig",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 29,
														"src": "1550:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 114,
																"name": "u",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 62,
																"src": "1567:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															],
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1560:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes4_$",
																"typeString": "type(bytes4)"
															},
															"typeName": {
																"id": 112,
																"name": "bytes4",
																"nodeType": "ElementaryTypeName",
																"src": "1560:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1560:9:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1550:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "1550:19:0"
											}
										]
									},
									"functionSelector": "c0ee0b8a",
									"id": 119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenFallback",
									"nameLocation": "951:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "982:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "974:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1004:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "996:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "996:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1032:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1019:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 35,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1019:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "964:78:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1075:0:0"
									},
									"scope": 120,
									"src": "942:634:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 121,
							"src": "631:947:0",
							"usedErrors": []
						}
					],
					"src": "98:1481:0"
				},
				"id": 0
			}
		}
	}
}