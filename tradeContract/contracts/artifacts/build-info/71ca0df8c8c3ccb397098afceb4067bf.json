{
	"id": "71ca0df8c8c3ccb397098afceb4067bf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.2",
	"solcLongVersion": "0.8.2+commit.661d1103",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Tokens.sol": {
				"content": "// Copyright (c) 2015-2020 Clearmatics Technologies Ltd\n//\n// SPDX-License-Identifier: LGPL-3.0+\n\npragma solidity ^0.8.2;\npragma experimental ABIEncoderV2;\n\n/// Declare the ERC20 interface in order to handle ERC20 tokens transfers to\n/// and from the Mixer. Note that we only declare the functions we are\n/// interested in, namely, transferFrom() (used to do a Deposit), and\n/// transfer() (used to do a withdrawal)\nabstract contract ERC20 \n{\n    function transferFrom(address from, address to, uint256 value) public virtual;\n    function transfer(address to, uint256 value) public virtual;\n}\n\n/// ERC223 token compatible contract\ncontract ERC223ReceivingContract {\n    // See:\n    // solhint-disable-next-line max-line-length\n    //   https://github.com/Dexaran/ERC223-token-standard/blob/Recommended/Receiver_Interface.sol\n    struct Token {\n        address sender;\n        uint256 value;\n        bytes data;\n        bytes4 sig;\n    }\n\n    function tokenFallback(\n        address from,\n        uint256 value,\n        bytes memory data\n    )\n        public\n        pure\n    {\n        Token memory tkn;\n        tkn.sender = from;\n        tkn.value = value;\n        tkn.data = data;\n\n        // See:\n        // solhint-disable-next-line max-line-length\n        //   https://solidity.readthedocs.io/en/v0.5.5/types.html#conversions-between-elementary-types\n        uint32 u =\n            uint32(bytes4(data[0])) +\n            uint32(bytes4(data[1]) >> 8) +\n            uint32(bytes4(data[2]) >> 16) +\n            uint32(bytes4(data[3]) >> 24);\n        tkn.sig = bytes4(u);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Tokens.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Declare the ERC20 interface in order to handle ERC20 tokens transfers to and from the Mixer. Note that we only declare the functions we are interested in, namely, transferFrom() (used to do a Deposit), and transfer() (used to do a withdrawal)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Tokens.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Tokens.sol\":{\"keccak256\":\"0x836f6849c73c58588062bc670f3fb05b0b1558bcae2ebf5fcaa49aa892a33d71\",\"license\":\"LGPL-3.0+\",\"urls\":[\"bzz-raw://dfc4c4e9529b7931363e5ed52b3d92a1db473d4d4f315544a7f91e39e9f1d02e\",\"dweb:/ipfs/QmVQpwWE7ZGCRRwcL7ShEkhrp9gywgEevXAQSi44pAr5Fg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Declare the ERC20 interface in order to handle ERC20 tokens transfers to and from the Mixer. Note that we only declare the functions we are interested in, namely, transferFrom() (used to do a Deposit), and transfer() (used to do a withdrawal)",
						"version": 1
					}
				},
				"ERC223ReceivingContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "tokenFallback",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Tokens.sol\":631:1578  contract ERC223ReceivingContract {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Tokens.sol\":631:1578  contract ERC223ReceivingContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc0ee0b8a\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Tokens.sol\":942:1576  function tokenFallback(... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      stop\n    tag_7:\n        /* \"contracts/Tokens.sol\":1085:1101  Token memory tkn */\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n        /* \"contracts/Tokens.sol\":1124:1128  from */\n      dup4\n        /* \"contracts/Tokens.sol\":1111:1114  tkn */\n      dup2\n        /* \"contracts/Tokens.sol\":1111:1121  tkn.sender */\n      0x00\n      add\n        /* \"contracts/Tokens.sol\":1111:1128  tkn.sender = from */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Tokens.sol\":1150:1155  value */\n      dup3\n        /* \"contracts/Tokens.sol\":1138:1141  tkn */\n      dup2\n        /* \"contracts/Tokens.sol\":1138:1147  tkn.value */\n      0x20\n      add\n        /* \"contracts/Tokens.sol\":1138:1155  tkn.value = value */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Tokens.sol\":1176:1180  data */\n      dup2\n        /* \"contracts/Tokens.sol\":1165:1168  tkn */\n      dup2\n        /* \"contracts/Tokens.sol\":1165:1173  tkn.data */\n      0x40\n      add\n        /* \"contracts/Tokens.sol\":1165:1180  tkn.data = data */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/Tokens.sol\":1363:1371  uint32 u */\n      0x00\n        /* \"contracts/Tokens.sol\":1537:1539  24 */\n      0x18\n        /* \"contracts/Tokens.sol\":1525:1529  data */\n      dup4\n        /* \"contracts/Tokens.sol\":1530:1531  3 */\n      0x03\n        /* \"contracts/Tokens.sol\":1525:1532  data[3] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_11\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_11:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/Tokens.sol\":1518:1533  bytes4(data[3]) */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/Tokens.sol\":1518:1539  bytes4(data[3]) >> 24 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      shr\n        /* \"contracts/Tokens.sol\":1511:1540  uint32(bytes4(data[3]) >> 24) */\n      0xe0\n      shr\n        /* \"contracts/Tokens.sol\":1493:1495  16 */\n      0x10\n        /* \"contracts/Tokens.sol\":1481:1485  data */\n      dup5\n        /* \"contracts/Tokens.sol\":1486:1487  2 */\n      0x02\n        /* \"contracts/Tokens.sol\":1481:1488  data[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_12\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_12:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/Tokens.sol\":1474:1489  bytes4(data[2]) */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/Tokens.sol\":1474:1495  bytes4(data[2]) >> 16 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      shr\n        /* \"contracts/Tokens.sol\":1467:1496  uint32(bytes4(data[2]) >> 16) */\n      0xe0\n      shr\n        /* \"contracts/Tokens.sol\":1450:1451  8 */\n      0x08\n        /* \"contracts/Tokens.sol\":1438:1442  data */\n      dup6\n        /* \"contracts/Tokens.sol\":1443:1444  1 */\n      0x01\n        /* \"contracts/Tokens.sol\":1438:1445  data[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_13\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_13:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/Tokens.sol\":1431:1446  bytes4(data[1]) */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/Tokens.sol\":1431:1451  bytes4(data[1]) >> 8 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      shr\n        /* \"contracts/Tokens.sol\":1424:1452  uint32(bytes4(data[1]) >> 8) */\n      0xe0\n      shr\n        /* \"contracts/Tokens.sol\":1400:1404  data */\n      dup6\n        /* \"contracts/Tokens.sol\":1405:1406  0 */\n      0x00\n        /* \"contracts/Tokens.sol\":1400:1407  data[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_14\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_14:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/Tokens.sol\":1393:1408  bytes4(data[0]) */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/Tokens.sol\":1386:1409  uint32(bytes4(data[0])) */\n      0xe0\n      shr\n        /* \"contracts/Tokens.sol\":1386:1452  uint32(bytes4(data[0])) +... */\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"contracts/Tokens.sol\":1386:1496  uint32(bytes4(data[0])) +... */\n      tag_17\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_17:\n        /* \"contracts/Tokens.sol\":1386:1540  uint32(bytes4(data[0])) +... */\n      tag_18\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_18:\n        /* \"contracts/Tokens.sol\":1363:1540  uint32 u =... */\n      swap1\n      pop\n        /* \"contracts/Tokens.sol\":1567:1568  u */\n      dup1\n        /* \"contracts/Tokens.sol\":1560:1569  bytes4(u) */\n      0xe0\n      shl\n        /* \"contracts/Tokens.sol\":1550:1553  tkn */\n      dup3\n        /* \"contracts/Tokens.sol\":1550:1557  tkn.sig */\n      0x60\n      add\n        /* \"contracts/Tokens.sol\":1550:1569  tkn.sig = bytes4(u) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Tokens.sol\":942:1576  function tokenFallback(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_10:\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:350   */\n    tag_20:\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_22\n        /* \"#utility.yul\":125:173   */\n      tag_23\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":109:174   */\n      tag_25\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:251   */\n      iszero\n      tag_26\n      jumpi\n        /* \"#utility.yul\":290:291   */\n      0x00\n        /* \"#utility.yul\":287:288   */\n      dup1\n        /* \"#utility.yul\":280:292   */\n      revert\n        /* \"#utility.yul\":249:251   */\n    tag_26:\n        /* \"#utility.yul\":303:344   */\n      tag_27\n        /* \"#utility.yul\":337:343   */\n      dup5\n        /* \"#utility.yul\":332:335   */\n      dup3\n        /* \"#utility.yul\":327:330   */\n      dup6\n        /* \"#utility.yul\":303:344   */\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":90:350   */\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":356:495   */\n    tag_29:\n      0x00\n        /* \"#utility.yul\":440:446   */\n      dup2\n        /* \"#utility.yul\":427:447   */\n      calldataload\n        /* \"#utility.yul\":418:447   */\n      swap1\n      pop\n        /* \"#utility.yul\":456:489   */\n      tag_31\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":456:489   */\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":408:495   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":514:785   */\n    tag_33:\n      0x00\n        /* \"#utility.yul\":618:621   */\n      dup3\n        /* \"#utility.yul\":611:615   */\n      0x1f\n        /* \"#utility.yul\":603:609   */\n      dup4\n        /* \"#utility.yul\":599:616   */\n      add\n        /* \"#utility.yul\":595:622   */\n      slt\n        /* \"#utility.yul\":585:587   */\n      tag_35\n      jumpi\n        /* \"#utility.yul\":636:637   */\n      0x00\n        /* \"#utility.yul\":633:634   */\n      dup1\n        /* \"#utility.yul\":626:638   */\n      revert\n        /* \"#utility.yul\":585:587   */\n    tag_35:\n        /* \"#utility.yul\":676:682   */\n      dup2\n        /* \"#utility.yul\":663:683   */\n      calldataload\n        /* \"#utility.yul\":701:779   */\n      tag_36\n        /* \"#utility.yul\":775:778   */\n      dup5\n        /* \"#utility.yul\":767:773   */\n      dup3\n        /* \"#utility.yul\":760:764   */\n      0x20\n        /* \"#utility.yul\":752:758   */\n      dup7\n        /* \"#utility.yul\":748:765   */\n      add\n        /* \"#utility.yul\":701:779   */\n      tag_20\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":692:779   */\n      swap2\n      pop\n        /* \"#utility.yul\":575:785   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":791:930   */\n    tag_37:\n      0x00\n        /* \"#utility.yul\":875:881   */\n      dup2\n        /* \"#utility.yul\":862:882   */\n      calldataload\n        /* \"#utility.yul\":853:882   */\n      swap1\n      pop\n        /* \"#utility.yul\":891:924   */\n      tag_39\n        /* \"#utility.yul\":918:923   */\n      dup2\n        /* \"#utility.yul\":891:924   */\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":843:930   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":936:1599   */\n    tag_6:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":1087:1089   */\n      0x60\n        /* \"#utility.yul\":1075:1084   */\n      dup5\n        /* \"#utility.yul\":1066:1073   */\n      dup7\n        /* \"#utility.yul\":1062:1085   */\n      sub\n        /* \"#utility.yul\":1058:1090   */\n      slt\n        /* \"#utility.yul\":1055:1057   */\n      iszero\n      tag_42\n      jumpi\n        /* \"#utility.yul\":1103:1104   */\n      0x00\n        /* \"#utility.yul\":1100:1101   */\n      dup1\n        /* \"#utility.yul\":1093:1105   */\n      revert\n        /* \"#utility.yul\":1055:1057   */\n    tag_42:\n        /* \"#utility.yul\":1146:1147   */\n      0x00\n        /* \"#utility.yul\":1171:1224   */\n      tag_43\n        /* \"#utility.yul\":1216:1223   */\n      dup7\n        /* \"#utility.yul\":1207:1213   */\n      dup3\n        /* \"#utility.yul\":1196:1205   */\n      dup8\n        /* \"#utility.yul\":1192:1214   */\n      add\n        /* \"#utility.yul\":1171:1224   */\n      tag_29\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1161:1224   */\n      swap4\n      pop\n        /* \"#utility.yul\":1117:1234   */\n      pop\n        /* \"#utility.yul\":1273:1275   */\n      0x20\n        /* \"#utility.yul\":1299:1352   */\n      tag_44\n        /* \"#utility.yul\":1344:1351   */\n      dup7\n        /* \"#utility.yul\":1335:1341   */\n      dup3\n        /* \"#utility.yul\":1324:1333   */\n      dup8\n        /* \"#utility.yul\":1320:1342   */\n      add\n        /* \"#utility.yul\":1299:1352   */\n      tag_37\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1289:1352   */\n      swap3\n      pop\n        /* \"#utility.yul\":1244:1362   */\n      pop\n        /* \"#utility.yul\":1429:1431   */\n      0x40\n        /* \"#utility.yul\":1418:1427   */\n      dup5\n        /* \"#utility.yul\":1414:1432   */\n      add\n        /* \"#utility.yul\":1401:1433   */\n      calldataload\n        /* \"#utility.yul\":1460:1478   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1452:1458   */\n      dup2\n        /* \"#utility.yul\":1449:1479   */\n      gt\n        /* \"#utility.yul\":1446:1448   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":1492:1493   */\n      0x00\n        /* \"#utility.yul\":1489:1490   */\n      dup1\n        /* \"#utility.yul\":1482:1494   */\n      revert\n        /* \"#utility.yul\":1446:1448   */\n    tag_45:\n        /* \"#utility.yul\":1520:1582   */\n      tag_46\n        /* \"#utility.yul\":1574:1581   */\n      dup7\n        /* \"#utility.yul\":1565:1571   */\n      dup3\n        /* \"#utility.yul\":1554:1563   */\n      dup8\n        /* \"#utility.yul\":1550:1572   */\n      add\n        /* \"#utility.yul\":1520:1582   */\n      tag_33\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1510:1582   */\n      swap2\n      pop\n        /* \"#utility.yul\":1372:1592   */\n      pop\n        /* \"#utility.yul\":1045:1599   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1605:1734   */\n    tag_25:\n      0x00\n        /* \"#utility.yul\":1666:1686   */\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1656:1686   */\n      swap1\n      pop\n        /* \"#utility.yul\":1695:1728   */\n      tag_50\n        /* \"#utility.yul\":1723:1727   */\n      dup3\n        /* \"#utility.yul\":1715:1721   */\n      dup3\n        /* \"#utility.yul\":1695:1728   */\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1646:1734   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1740:1815   */\n    tag_49:\n      0x00\n        /* \"#utility.yul\":1806:1808   */\n      0x40\n        /* \"#utility.yul\":1800:1809   */\n      mload\n        /* \"#utility.yul\":1790:1809   */\n      swap1\n      pop\n        /* \"#utility.yul\":1780:1815   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1821:2128   */\n    tag_24:\n      0x00\n        /* \"#utility.yul\":1972:1990   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1964:1970   */\n      dup3\n        /* \"#utility.yul\":1961:1991   */\n      gt\n        /* \"#utility.yul\":1958:1960   */\n      iszero\n      tag_54\n      jumpi\n        /* \"#utility.yul\":1994:2012   */\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1958:1960   */\n    tag_54:\n        /* \"#utility.yul\":2032:2061   */\n      tag_57\n        /* \"#utility.yul\":2054:2060   */\n      dup3\n        /* \"#utility.yul\":2032:2061   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":2024:2061   */\n      swap1\n      pop\n        /* \"#utility.yul\":2116:2120   */\n      0x20\n        /* \"#utility.yul\":2110:2114   */\n      dup2\n        /* \"#utility.yul\":2106:2121   */\n      add\n        /* \"#utility.yul\":2098:2121   */\n      swap1\n      pop\n        /* \"#utility.yul\":1887:2128   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2134:2380   */\n    tag_16:\n      0x00\n        /* \"#utility.yul\":2192:2211   */\n      tag_60\n        /* \"#utility.yul\":2209:2210   */\n      dup3\n        /* \"#utility.yul\":2192:2211   */\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":2187:2211   */\n      swap2\n      pop\n        /* \"#utility.yul\":2225:2244   */\n      tag_62\n        /* \"#utility.yul\":2242:2243   */\n      dup4\n        /* \"#utility.yul\":2225:2244   */\n      tag_61\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":2220:2244   */\n      swap3\n      pop\n        /* \"#utility.yul\":2322:2323   */\n      dup3\n        /* \"#utility.yul\":2310:2320   */\n      0xffffffff\n        /* \"#utility.yul\":2306:2324   */\n      sub\n        /* \"#utility.yul\":2303:2304   */\n      dup3\n        /* \"#utility.yul\":2300:2325   */\n      gt\n        /* \"#utility.yul\":2297:2299   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":2328:2346   */\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2297:2299   */\n    tag_63:\n        /* \"#utility.yul\":2372:2373   */\n      dup3\n        /* \"#utility.yul\":2369:2370   */\n      dup3\n        /* \"#utility.yul\":2365:2374   */\n      add\n        /* \"#utility.yul\":2358:2374   */\n      swap1\n      pop\n        /* \"#utility.yul\":2177:2380   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2386:2482   */\n    tag_66:\n      0x00\n        /* \"#utility.yul\":2452:2476   */\n      tag_68\n        /* \"#utility.yul\":2470:2475   */\n      dup3\n        /* \"#utility.yul\":2452:2476   */\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2441:2476   */\n      swap1\n      pop\n        /* \"#utility.yul\":2431:2482   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2488:2614   */\n    tag_69:\n      0x00\n        /* \"#utility.yul\":2565:2607   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2558:2563   */\n      dup3\n        /* \"#utility.yul\":2554:2608   */\n      and\n        /* \"#utility.yul\":2543:2608   */\n      swap1\n      pop\n        /* \"#utility.yul\":2533:2614   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2620:2697   */\n    tag_71:\n      0x00\n        /* \"#utility.yul\":2686:2691   */\n      dup2\n        /* \"#utility.yul\":2675:2691   */\n      swap1\n      pop\n        /* \"#utility.yul\":2665:2697   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2703:2796   */\n    tag_61:\n      0x00\n        /* \"#utility.yul\":2779:2789   */\n      0xffffffff\n        /* \"#utility.yul\":2772:2777   */\n      dup3\n        /* \"#utility.yul\":2768:2790   */\n      and\n        /* \"#utility.yul\":2757:2790   */\n      swap1\n      pop\n        /* \"#utility.yul\":2747:2796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2802:2956   */\n    tag_28:\n        /* \"#utility.yul\":2886:2892   */\n      dup3\n        /* \"#utility.yul\":2881:2884   */\n      dup2\n        /* \"#utility.yul\":2876:2879   */\n      dup4\n        /* \"#utility.yul\":2863:2893   */\n      calldatacopy\n        /* \"#utility.yul\":2948:2949   */\n      0x00\n        /* \"#utility.yul\":2939:2945   */\n      dup4\n        /* \"#utility.yul\":2934:2937   */\n      dup4\n        /* \"#utility.yul\":2930:2946   */\n      add\n        /* \"#utility.yul\":2923:2950   */\n      mstore\n        /* \"#utility.yul\":2853:2956   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2962:3243   */\n    tag_51:\n        /* \"#utility.yul\":3045:3072   */\n      tag_76\n        /* \"#utility.yul\":3067:3071   */\n      dup3\n        /* \"#utility.yul\":3045:3072   */\n      tag_58\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":3037:3043   */\n      dup2\n        /* \"#utility.yul\":3033:3073   */\n      add\n        /* \"#utility.yul\":3175:3181   */\n      dup2\n        /* \"#utility.yul\":3163:3173   */\n      dup2\n        /* \"#utility.yul\":3160:3182   */\n      lt\n        /* \"#utility.yul\":3139:3157   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3127:3137   */\n      dup3\n        /* \"#utility.yul\":3124:3158   */\n      gt\n        /* \"#utility.yul\":3121:3183   */\n      or\n        /* \"#utility.yul\":3118:3120   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":3186:3204   */\n      tag_78\n      tag_56\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":3118:3120   */\n    tag_77:\n        /* \"#utility.yul\":3226:3236   */\n      dup1\n        /* \"#utility.yul\":3222:3224   */\n      0x40\n        /* \"#utility.yul\":3215:3237   */\n      mstore\n        /* \"#utility.yul\":3005:3243   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3249:3429   */\n    tag_65:\n        /* \"#utility.yul\":3297:3374   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3294:3295   */\n      0x00\n        /* \"#utility.yul\":3287:3375   */\n      mstore\n        /* \"#utility.yul\":3394:3398   */\n      0x11\n        /* \"#utility.yul\":3391:3392   */\n      0x04\n        /* \"#utility.yul\":3384:3399   */\n      mstore\n        /* \"#utility.yul\":3418:3422   */\n      0x24\n        /* \"#utility.yul\":3415:3416   */\n      0x00\n        /* \"#utility.yul\":3408:3423   */\n      revert\n        /* \"#utility.yul\":3435:3615   */\n    tag_56:\n        /* \"#utility.yul\":3483:3560   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3480:3481   */\n      0x00\n        /* \"#utility.yul\":3473:3561   */\n      mstore\n        /* \"#utility.yul\":3580:3584   */\n      0x41\n        /* \"#utility.yul\":3577:3578   */\n      0x04\n        /* \"#utility.yul\":3570:3585   */\n      mstore\n        /* \"#utility.yul\":3604:3608   */\n      0x24\n        /* \"#utility.yul\":3601:3602   */\n      0x00\n        /* \"#utility.yul\":3594:3609   */\n      revert\n        /* \"#utility.yul\":3621:3723   */\n    tag_58:\n      0x00\n        /* \"#utility.yul\":3713:3715   */\n      0x1f\n        /* \"#utility.yul\":3709:3716   */\n      not\n        /* \"#utility.yul\":3704:3706   */\n      0x1f\n        /* \"#utility.yul\":3697:3702   */\n      dup4\n        /* \"#utility.yul\":3693:3707   */\n      add\n        /* \"#utility.yul\":3689:3717   */\n      and\n        /* \"#utility.yul\":3679:3717   */\n      swap1\n      pop\n        /* \"#utility.yul\":3669:3723   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3729:3851   */\n    tag_32:\n        /* \"#utility.yul\":3802:3826   */\n      tag_83\n        /* \"#utility.yul\":3820:3825   */\n      dup2\n        /* \"#utility.yul\":3802:3826   */\n      tag_66\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":3795:3800   */\n      dup2\n        /* \"#utility.yul\":3792:3827   */\n      eq\n        /* \"#utility.yul\":3782:3784   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":3841:3842   */\n      0x00\n        /* \"#utility.yul\":3838:3839   */\n      dup1\n        /* \"#utility.yul\":3831:3843   */\n      revert\n        /* \"#utility.yul\":3782:3784   */\n    tag_84:\n        /* \"#utility.yul\":3772:3851   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3857:3979   */\n    tag_40:\n        /* \"#utility.yul\":3930:3954   */\n      tag_86\n        /* \"#utility.yul\":3948:3953   */\n      dup2\n        /* \"#utility.yul\":3930:3954   */\n      tag_71\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3923:3928   */\n      dup2\n        /* \"#utility.yul\":3920:3955   */\n      eq\n        /* \"#utility.yul\":3910:3912   */\n      tag_87\n      jumpi\n        /* \"#utility.yul\":3969:3970   */\n      0x00\n        /* \"#utility.yul\":3966:3967   */\n      dup1\n        /* \"#utility.yul\":3959:3971   */\n      revert\n        /* \"#utility.yul\":3910:3912   */\n    tag_87:\n        /* \"#utility.yul\":3900:3979   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b739205e0112ee08d07f54003ed61feca23e0205ea50e2803bcc448ed6efc9db64736f6c63430008020033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061066b806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c0ee0b8a14610030575b600080fd5b61004a60048036038101906100459190610415565b61004c565b005b610054610326565b83816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508281602001818152505081816040018190525060006018836003815181106100dd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c60e01c60108460028151811061016a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c60e01c6008856001815181106101f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c60e01c85600081518110610282577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191660e01c6102bc91906104d2565b6102c691906104d2565b6102d091906104d2565b90508060e01b82606001907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250505050505050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525090565b6000610396610391846104a1565b61047c565b9050828152602081018484840111156103ae57600080fd5b6103b9848285610558565b509392505050565b6000813590506103d081610607565b92915050565b600082601f8301126103e757600080fd5b81356103f7848260208601610383565b91505092915050565b60008135905061040f8161061e565b92915050565b60008060006060848603121561042a57600080fd5b6000610438868287016103c1565b935050602061044986828701610400565b925050604084013567ffffffffffffffff81111561046657600080fd5b610472868287016103d6565b9150509250925092565b6000610486610497565b90506104928282610567565b919050565b6000604051905090565b600067ffffffffffffffff8211156104bc576104bb6105c7565b5b6104c5826105f6565b9050602081019050919050565b60006104dd82610548565b91506104e883610548565b92508263ffffffff0382111561050157610500610598565b5b828201905092915050565b60006105178261051e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b82818337600083830152505050565b610570826105f6565b810181811067ffffffffffffffff8211171561058f5761058e6105c7565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6106108161050c565b811461061b57600080fd5b50565b6106278161053e565b811461063257600080fd5b5056fea2646970667358221220b739205e0112ee08d07f54003ed61feca23e0205ea50e2803bcc448ed6efc9db64736f6c63430008020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66B DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC0EE0B8A EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x415 JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x54 PUSH2 0x326 JUMP JUMPDEST DUP4 DUP2 PUSH1 0x0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x40 ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 PUSH1 0x18 DUP4 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0xDD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHR PUSH1 0xE0 SHR PUSH1 0x10 DUP5 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x16A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHR PUSH1 0xE0 SHR PUSH1 0x8 DUP6 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1F7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHR PUSH1 0xE0 SHR DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x282 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0xE0 SHR PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x4D2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xE0 SHL DUP3 PUSH1 0x60 ADD SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x396 PUSH2 0x391 DUP5 PUSH2 0x4A1 JUMP JUMPDEST PUSH2 0x47C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3B9 DUP5 DUP3 DUP6 PUSH2 0x558 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D0 DUP2 PUSH2 0x607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3F7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x383 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x40F DUP2 PUSH2 0x61E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x438 DUP7 DUP3 DUP8 ADD PUSH2 0x3C1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x449 DUP7 DUP3 DUP8 ADD PUSH2 0x400 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x472 DUP7 DUP3 DUP8 ADD PUSH2 0x3D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x486 PUSH2 0x497 JUMP JUMPDEST SWAP1 POP PUSH2 0x492 DUP3 DUP3 PUSH2 0x567 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4BC JUMPI PUSH2 0x4BB PUSH2 0x5C7 JUMP JUMPDEST JUMPDEST PUSH2 0x4C5 DUP3 PUSH2 0x5F6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DD DUP3 PUSH2 0x548 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E8 DUP4 PUSH2 0x548 JUMP JUMPDEST SWAP3 POP DUP3 PUSH4 0xFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x501 JUMPI PUSH2 0x500 PUSH2 0x598 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x517 DUP3 PUSH2 0x51E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x570 DUP3 PUSH2 0x5F6 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x58F JUMPI PUSH2 0x58E PUSH2 0x5C7 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x610 DUP2 PUSH2 0x50C JUMP JUMPDEST DUP2 EQ PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x627 DUP2 PUSH2 0x53E JUMP JUMPDEST DUP2 EQ PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 CODECOPY KECCAK256 0x5E ADD SLT 0xEE ADDMOD 0xD0 PUSH32 0x54003ED61FECA23E0205EA50E2803BCC448ED6EFC9DB64736F6C634300080200 CALLER ",
							"sourceMap": "631:947:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3982:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:260:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "287:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "290:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "280:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:1"
															},
															"nodeType": "YulIf",
															"src": "249:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "327:3:1"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "332:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "337:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "303:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "303:41:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:1",
														"type": ""
													}
												],
												"src": "7:343:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "408:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "418:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "440:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "427:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "427:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "418:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "483:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "456:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "456:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "456:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "386:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "394:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "402:5:1",
														"type": ""
													}
												],
												"src": "356:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "575:210:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "624:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "633:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "636:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "626:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "626:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "626:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "603:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "611:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "599:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "599:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "618:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "595:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "595:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "588:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "588:35:1"
															},
															"nodeType": "YulIf",
															"src": "585:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "649:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "676:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "663:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "663:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "653:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "692:87:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "752:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "760:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "748:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "748:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "767:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "775:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "701:46:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:78:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "692:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "553:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "561:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "569:5:1",
														"type": ""
													}
												],
												"src": "514:271:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "843:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "853:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "875:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "862:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "862:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "853:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "918:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "891:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "891:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "891:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "821:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "829:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "837:5:1",
														"type": ""
													}
												],
												"src": "791:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1045:554:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1091:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1100:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1103:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1093:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1093:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1093:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1066:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1075:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1062:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1062:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1087:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1058:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1058:32:1"
															},
															"nodeType": "YulIf",
															"src": "1055:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1117:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1132:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1146:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1136:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1161:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1196:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1207:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1192:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1192:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1216:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1171:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1244:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1259:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1273:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1263:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1289:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1324:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1335:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1320:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1320:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1344:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1299:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1299:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1289:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1372:220:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1387:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1418:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1429:2:1",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1414:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1414:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1401:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1391:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1480:16:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1489:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1492:1:1",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1482:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1482:12:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1482:12:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1452:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1460:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1449:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1449:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "1446:2:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1510:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1554:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1565:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1550:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1550:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1574:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1520:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1520:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1510:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "999:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1010:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1022:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1030:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1038:6:1",
														"type": ""
													}
												],
												"src": "936:663:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1646:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1656:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1666:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1666:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1656:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1723:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1695:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1695:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1695:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1630:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1639:6:1",
														"type": ""
													}
												],
												"src": "1605:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1780:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1790:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1806:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1800:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1790:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1773:6:1",
														"type": ""
													}
												],
												"src": "1740:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1887:241:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1992:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1994:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1994:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1994:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1961:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1961:30:1"
															},
															"nodeType": "YulIf",
															"src": "1958:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2024:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2054:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2032:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2024:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2098:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2110:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2116:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2106:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2106:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2098:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1871:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1882:4:1",
														"type": ""
													}
												],
												"src": "1821:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2177:203:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2187:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2209:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "2192:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2192:19:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2187:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2220:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2242:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "2225:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2225:19:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2220:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2326:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2328:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2328:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2328:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2303:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2310:10:1",
																				"type": "",
																				"value": "0xffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2322:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2306:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2300:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2300:25:1"
															},
															"nodeType": "YulIf",
															"src": "2297:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2358:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2369:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2372:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2365:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2365:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2358:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2164:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2167:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2173:3:1",
														"type": ""
													}
												],
												"src": "2134:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2431:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2441:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2470:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2452:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2452:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2441:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2413:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2423:7:1",
														"type": ""
													}
												],
												"src": "2386:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2533:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2543:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2558:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2565:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2554:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2554:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2543:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2515:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2525:7:1",
														"type": ""
													}
												],
												"src": "2488:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2665:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2675:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2686:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2675:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2647:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2657:7:1",
														"type": ""
													}
												],
												"src": "2620:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2747:49:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2757:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2772:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2779:10:1",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2768:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2768:22:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2757:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2729:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2739:7:1",
														"type": ""
													}
												],
												"src": "2703:93:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2853:103:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2876:3:1"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2881:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2886:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2863:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2863:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2863:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2934:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2939:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2930:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2930:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2948:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2923:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2923:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2923:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2835:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2840:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2845:6:1",
														"type": ""
													}
												],
												"src": "2802:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3005:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3015:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3037:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3067:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3045:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3045:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3033:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3033:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3019:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3184:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3186:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3186:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3186:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3127:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3139:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3124:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3124:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3163:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3175:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3160:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3160:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3121:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3121:62:1"
															},
															"nodeType": "YulIf",
															"src": "3118:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3222:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3226:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3215:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3215:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3215:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2991:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2999:4:1",
														"type": ""
													}
												],
												"src": "2962:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3277:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3294:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3297:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3287:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3287:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3287:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3391:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3394:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3384:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3384:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3384:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3415:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3418:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3408:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3408:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3408:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3249:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3463:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3480:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3483:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3473:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3473:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3577:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3580:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3570:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3570:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3570:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3601:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3604:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3594:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3594:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3594:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3435:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3679:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3697:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3704:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3693:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3693:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3713:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3709:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3709:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3689:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3689:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3652:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3662:6:1",
														"type": ""
													}
												],
												"src": "3621:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3772:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3829:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3838:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3841:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3831:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3831:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3831:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3795:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3820:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3802:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3802:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3792:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3792:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3785:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3785:43:1"
															},
															"nodeType": "YulIf",
															"src": "3782:2:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3765:5:1",
														"type": ""
													}
												],
												"src": "3729:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3900:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3957:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3966:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3969:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3959:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3959:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3959:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3923:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3948:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3930:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3930:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3920:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3920:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3913:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3913:43:1"
															},
															"nodeType": "YulIf",
															"src": "3910:2:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3893:5:1",
														"type": ""
													}
												],
												"src": "3857:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function checked_add_t_uint32(x, y) -> sum {\n        x := cleanup_t_uint32(x)\n        y := cleanup_t_uint32(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c0ee0b8a14610030575b600080fd5b61004a60048036038101906100459190610415565b61004c565b005b610054610326565b83816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508281602001818152505081816040018190525060006018836003815181106100dd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c60e01c60108460028151811061016a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c60e01c6008856001815181106101f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c60e01c85600081518110610282577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191660e01c6102bc91906104d2565b6102c691906104d2565b6102d091906104d2565b90508060e01b82606001907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250505050505050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525090565b6000610396610391846104a1565b61047c565b9050828152602081018484840111156103ae57600080fd5b6103b9848285610558565b509392505050565b6000813590506103d081610607565b92915050565b600082601f8301126103e757600080fd5b81356103f7848260208601610383565b91505092915050565b60008135905061040f8161061e565b92915050565b60008060006060848603121561042a57600080fd5b6000610438868287016103c1565b935050602061044986828701610400565b925050604084013567ffffffffffffffff81111561046657600080fd5b610472868287016103d6565b9150509250925092565b6000610486610497565b90506104928282610567565b919050565b6000604051905090565b600067ffffffffffffffff8211156104bc576104bb6105c7565b5b6104c5826105f6565b9050602081019050919050565b60006104dd82610548565b91506104e883610548565b92508263ffffffff0382111561050157610500610598565b5b828201905092915050565b60006105178261051e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b82818337600083830152505050565b610570826105f6565b810181811067ffffffffffffffff8211171561058f5761058e6105c7565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6106108161050c565b811461061b57600080fd5b50565b6106278161053e565b811461063257600080fd5b5056fea2646970667358221220b739205e0112ee08d07f54003ed61feca23e0205ea50e2803bcc448ed6efc9db64736f6c63430008020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC0EE0B8A EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x415 JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x54 PUSH2 0x326 JUMP JUMPDEST DUP4 DUP2 PUSH1 0x0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x40 ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 PUSH1 0x18 DUP4 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0xDD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHR PUSH1 0xE0 SHR PUSH1 0x10 DUP5 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x16A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHR PUSH1 0xE0 SHR PUSH1 0x8 DUP6 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1F7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHR PUSH1 0xE0 SHR DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x282 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0xE0 SHR PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x4D2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xE0 SHL DUP3 PUSH1 0x60 ADD SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x396 PUSH2 0x391 DUP5 PUSH2 0x4A1 JUMP JUMPDEST PUSH2 0x47C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3B9 DUP5 DUP3 DUP6 PUSH2 0x558 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D0 DUP2 PUSH2 0x607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3F7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x383 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x40F DUP2 PUSH2 0x61E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x438 DUP7 DUP3 DUP8 ADD PUSH2 0x3C1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x449 DUP7 DUP3 DUP8 ADD PUSH2 0x400 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x472 DUP7 DUP3 DUP8 ADD PUSH2 0x3D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x486 PUSH2 0x497 JUMP JUMPDEST SWAP1 POP PUSH2 0x492 DUP3 DUP3 PUSH2 0x567 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4BC JUMPI PUSH2 0x4BB PUSH2 0x5C7 JUMP JUMPDEST JUMPDEST PUSH2 0x4C5 DUP3 PUSH2 0x5F6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DD DUP3 PUSH2 0x548 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E8 DUP4 PUSH2 0x548 JUMP JUMPDEST SWAP3 POP DUP3 PUSH4 0xFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x501 JUMPI PUSH2 0x500 PUSH2 0x598 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x517 DUP3 PUSH2 0x51E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x570 DUP3 PUSH2 0x5F6 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x58F JUMPI PUSH2 0x58E PUSH2 0x5C7 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x610 DUP2 PUSH2 0x50C JUMP JUMPDEST DUP2 EQ PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x627 DUP2 PUSH2 0x53E JUMP JUMPDEST DUP2 EQ PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 CODECOPY KECCAK256 0x5E ADD SLT 0xEE ADDMOD 0xD0 PUSH32 0x54003ED61FECA23E0205EA50E2803BCC448ED6EFC9DB64736F6C634300080200 CALLER ",
							"sourceMap": "631:947:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;942:634;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;1085:16;;:::i;:::-;1124:4;1111:3;:10;;:17;;;;;;;;;;;1150:5;1138:3;:9;;:17;;;;;1176:4;1165:3;:8;;:15;;;;1363:8;1537:2;1525:4;1530:1;1525:7;;;;;;;;;;;;;;;;;;;;;;;;1518:15;;;:21;;;;;1511:29;;1493:2;1481:4;1486:1;1481:7;;;;;;;;;;;;;;;;;;;;;;;;1474:15;;;:21;;;;;1467:29;;1450:1;1438:4;1443:1;1438:7;;;;;;;;;;;;;;;;;;;;;;;;1431:15;;;:20;;;;;1424:28;;1400:4;1405:1;1400:7;;;;;;;;;;;;;;;;;;;;;;;;1393:15;;;1386:23;;:66;;;;:::i;:::-;:110;;;;:::i;:::-;:154;;;;:::i;:::-;1363:177;;1567:1;1560:9;;1550:3;:7;;:19;;;;;;;;;;;;;942:634;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:343:1:-;;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:2;;;290:1;287;280:12;249:2;303:41;337:6;332:3;327;303:41;:::i;:::-;90:260;;;;;;:::o;356:139::-;;440:6;427:20;418:29;;456:33;483:5;456:33;:::i;:::-;408:87;;;;:::o;514:271::-;;618:3;611:4;603:6;599:17;595:27;585:2;;636:1;633;626:12;585:2;676:6;663:20;701:78;775:3;767:6;760:4;752:6;748:17;701:78;:::i;:::-;692:87;;575:210;;;;;:::o;791:139::-;;875:6;862:20;853:29;;891:33;918:5;891:33;:::i;:::-;843:87;;;;:::o;936:663::-;;;;1087:2;1075:9;1066:7;1062:23;1058:32;1055:2;;;1103:1;1100;1093:12;1055:2;1146:1;1171:53;1216:7;1207:6;1196:9;1192:22;1171:53;:::i;:::-;1161:63;;1117:117;1273:2;1299:53;1344:7;1335:6;1324:9;1320:22;1299:53;:::i;:::-;1289:63;;1244:118;1429:2;1418:9;1414:18;1401:32;1460:18;1452:6;1449:30;1446:2;;;1492:1;1489;1482:12;1446:2;1520:62;1574:7;1565:6;1554:9;1550:22;1520:62;:::i;:::-;1510:72;;1372:220;1045:554;;;;;:::o;1605:129::-;;1666:20;;:::i;:::-;1656:30;;1695:33;1723:4;1715:6;1695:33;:::i;:::-;1646:88;;;:::o;1740:75::-;;1806:2;1800:9;1790:19;;1780:35;:::o;1821:307::-;;1972:18;1964:6;1961:30;1958:2;;;1994:18;;:::i;:::-;1958:2;2032:29;2054:6;2032:29;:::i;:::-;2024:37;;2116:4;2110;2106:15;2098:23;;1887:241;;;:::o;2134:246::-;;2192:19;2209:1;2192:19;:::i;:::-;2187:24;;2225:19;2242:1;2225:19;:::i;:::-;2220:24;;2322:1;2310:10;2306:18;2303:1;2300:25;2297:2;;;2328:18;;:::i;:::-;2297:2;2372:1;2369;2365:9;2358:16;;2177:203;;;;:::o;2386:96::-;;2452:24;2470:5;2452:24;:::i;:::-;2441:35;;2431:51;;;:::o;2488:126::-;;2565:42;2558:5;2554:54;2543:65;;2533:81;;;:::o;2620:77::-;;2686:5;2675:16;;2665:32;;;:::o;2703:93::-;;2779:10;2772:5;2768:22;2757:33;;2747:49;;;:::o;2802:154::-;2886:6;2881:3;2876;2863:30;2948:1;2939:6;2934:3;2930:16;2923:27;2853:103;;;:::o;2962:281::-;3045:27;3067:4;3045:27;:::i;:::-;3037:6;3033:40;3175:6;3163:10;3160:22;3139:18;3127:10;3124:34;3121:62;3118:2;;;3186:18;;:::i;:::-;3118:2;3226:10;3222:2;3215:22;3005:238;;;:::o;3249:180::-;3297:77;3294:1;3287:88;3394:4;3391:1;3384:15;3418:4;3415:1;3408:15;3435:180;3483:77;3480:1;3473:88;3580:4;3577:1;3570:15;3604:4;3601:1;3594:15;3621:102;;3713:2;3709:7;3704:2;3697:5;3693:14;3689:28;3679:38;;3669:54;;;:::o;3729:122::-;3802:24;3820:5;3802:24;:::i;:::-;3795:5;3792:35;3782:2;;3841:1;3838;3831:12;3782:2;3772:79;:::o;3857:122::-;3930:24;3948:5;3930:24;:::i;:::-;3923:5;3920:35;3910:2;;3969:1;3966;3959:12;3910:2;3900:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "328600",
								"executionCost": "368",
								"totalCost": "328968"
							},
							"external": {
								"tokenFallback(address,uint256,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 631,
									"end": 1578,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 1578,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b739205e0112ee08d07f54003ed61feca23e0205ea50e2803bcc448ed6efc9db64736f6c63430008020033",
									".code": [
										{
											"begin": 631,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "C0EE0B8A"
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 631,
											"end": 1578,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1085,
											"end": 1101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1085,
											"end": 1101,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1101,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1085,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1128,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1121,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1128,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1111,
											"end": 1128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1128,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1111,
											"end": 1128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1173,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1173,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1363,
											"end": 1371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1539,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1525,
											"end": 1529,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1533,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1518,
											"end": 1533,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1539,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1518,
											"end": 1539,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1539,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1495,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1481,
											"end": 1485,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1486,
											"end": 1487,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1474,
											"end": 1489,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1474,
											"end": 1489,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1474,
											"end": 1489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1474,
											"end": 1495,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1474,
											"end": 1495,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1474,
											"end": 1495,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1474,
											"end": 1495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1474,
											"end": 1495,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1496,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1467,
											"end": 1496,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1451,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1438,
											"end": 1442,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1444,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1451,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1431,
											"end": 1451,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1451,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1452,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1424,
											"end": 1452,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1404,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1393,
											"end": 1408,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1393,
											"end": 1408,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1393,
											"end": 1408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1409,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1386,
											"end": 1409,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1386,
											"end": 1452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1386,
											"end": 1452,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1386,
											"end": 1452,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1386,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1386,
											"end": 1496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1386,
											"end": 1496,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1386,
											"end": 1496,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1386,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1386,
											"end": 1540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1386,
											"end": 1540,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1386,
											"end": 1540,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1386,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1363,
											"end": 1540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1363,
											"end": 1540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1567,
											"end": 1568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1553,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1557,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1550,
											"end": 1557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1569,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1550,
											"end": 1569,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1569,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1550,
											"end": 1569,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 942,
											"end": 1576,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "10"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 350,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7,
											"end": 350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 249,
											"end": 251,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 249,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 249,
											"end": 251,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 290,
											"end": 291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 288,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 280,
											"end": 292,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 249,
											"end": 251,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 249,
											"end": 251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 303,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 337,
											"end": 343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 332,
											"end": 335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 327,
											"end": 330,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 303,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 303,
											"end": 344,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 303,
											"end": 344,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 303,
											"end": 344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 90,
											"end": 350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 350,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 90,
											"end": 350,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 90,
											"end": 350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 350,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 356,
											"end": 495,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 356,
											"end": 495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 356,
											"end": 495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 427,
											"end": 447,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 418,
											"end": 447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 418,
											"end": 447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 456,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 456,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 456,
											"end": 489,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 456,
											"end": 489,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 456,
											"end": 489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 408,
											"end": 495,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 408,
											"end": 495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 408,
											"end": 495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 408,
											"end": 495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 408,
											"end": 495,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 514,
											"end": 785,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 514,
											"end": 785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 514,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 621,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 611,
											"end": 615,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 603,
											"end": 609,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 599,
											"end": 616,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 595,
											"end": 622,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 585,
											"end": 587,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 636,
											"end": 637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 634,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 626,
											"end": 638,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 585,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 585,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 676,
											"end": 682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 663,
											"end": 683,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 701,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 775,
											"end": 778,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 767,
											"end": 773,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 760,
											"end": 764,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 752,
											"end": 758,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 748,
											"end": 765,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 701,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 701,
											"end": 779,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 701,
											"end": 779,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 701,
											"end": 779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 692,
											"end": 779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 692,
											"end": 779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 575,
											"end": 785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 575,
											"end": 785,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 575,
											"end": 785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 575,
											"end": 785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 575,
											"end": 785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 575,
											"end": 785,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 791,
											"end": 930,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 791,
											"end": 930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 791,
											"end": 930,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 875,
											"end": 881,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 862,
											"end": 882,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 853,
											"end": 882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 891,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 918,
											"end": 923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 891,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 891,
											"end": 924,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 891,
											"end": 924,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 891,
											"end": 924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 843,
											"end": 930,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 843,
											"end": 930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 843,
											"end": 930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 843,
											"end": 930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 843,
											"end": 930,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 936,
											"end": 1599,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 936,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 936,
											"end": 1599,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 1599,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 936,
											"end": 1599,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1073,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1062,
											"end": 1085,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1090,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1055,
											"end": 1057,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1055,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1055,
											"end": 1057,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1104,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1093,
											"end": 1105,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1055,
											"end": 1057,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1055,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1216,
											"end": 1223,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 1213,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1205,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1171,
											"end": 1224,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1171,
											"end": 1224,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1171,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1224,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1275,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1299,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1344,
											"end": 1351,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1324,
											"end": 1333,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1299,
											"end": 1352,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1299,
											"end": 1352,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1299,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1352,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1352,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1431,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1418,
											"end": 1427,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1432,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1433,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1478,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1452,
											"end": 1458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1479,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1446,
											"end": 1448,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1446,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1446,
											"end": 1448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1489,
											"end": 1490,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 1494,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1446,
											"end": 1448,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1446,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1574,
											"end": 1581,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1565,
											"end": 1571,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1563,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1572,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1520,
											"end": 1582,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1520,
											"end": 1582,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1520,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1510,
											"end": 1582,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1510,
											"end": 1582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1372,
											"end": 1592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1599,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1599,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1599,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1599,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1605,
											"end": 1734,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1605,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1605,
											"end": 1734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1666,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1666,
											"end": 1686,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1666,
											"end": 1686,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1666,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1656,
											"end": 1686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1656,
											"end": 1686,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1695,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1723,
											"end": 1727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1695,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1695,
											"end": 1728,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1695,
											"end": 1728,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1695,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1734,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1734,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1740,
											"end": 1815,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1740,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1740,
											"end": 1815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1800,
											"end": 1809,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1815,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1821,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1821,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 2128,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1961,
											"end": 1991,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 1960,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1958,
											"end": 1960,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1994,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1994,
											"end": 2012,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1994,
											"end": 2012,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1994,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 1960,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1958,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2054,
											"end": 2060,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2032,
											"end": 2061,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2032,
											"end": 2061,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2032,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2116,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 2128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 2128,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 2128,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2134,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2134,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2134,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2209,
											"end": 2210,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2192,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2192,
											"end": 2211,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2192,
											"end": 2211,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2192,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2242,
											"end": 2243,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2225,
											"end": 2244,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2225,
											"end": 2244,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2225,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2244,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2323,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2306,
											"end": 2324,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2304,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2300,
											"end": 2325,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2373,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2370,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2374,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2374,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2177,
											"end": 2380,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2177,
											"end": 2380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2177,
											"end": 2380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2177,
											"end": 2380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2177,
											"end": 2380,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2386,
											"end": 2482,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2386,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2452,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2470,
											"end": 2475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2452,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2452,
											"end": 2476,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2452,
											"end": 2476,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2452,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2482,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2488,
											"end": 2614,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2488,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2607,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2558,
											"end": 2563,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2554,
											"end": 2608,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2533,
											"end": 2614,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2533,
											"end": 2614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2533,
											"end": 2614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2533,
											"end": 2614,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2620,
											"end": 2697,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2620,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2697,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2675,
											"end": 2691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2675,
											"end": 2691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2703,
											"end": 2796,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2703,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2789,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2772,
											"end": 2777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2790,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2790,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2796,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2796,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2802,
											"end": 2956,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2802,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2892,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2881,
											"end": 2884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2863,
											"end": 2893,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 2945,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2946,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2950,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2956,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2962,
											"end": 3243,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2962,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3067,
											"end": 3071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3037,
											"end": 3043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3073,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3181,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3139,
											"end": 3157,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3127,
											"end": 3137,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3158,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3183,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3120,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3118,
											"end": 3120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3186,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3186,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3186,
											"end": 3204,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3186,
											"end": 3204,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3186,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3118,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3226,
											"end": 3236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3224,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3215,
											"end": 3237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3243,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3249,
											"end": 3429,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3249,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3297,
											"end": 3374,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3294,
											"end": 3295,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3375,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3391,
											"end": 3392,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3384,
											"end": 3399,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3418,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3415,
											"end": 3416,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3423,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3615,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3435,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3483,
											"end": 3560,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3480,
											"end": 3481,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3580,
											"end": 3584,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3577,
											"end": 3578,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3570,
											"end": 3585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3604,
											"end": 3608,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3601,
											"end": 3602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3609,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3723,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3621,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3713,
											"end": 3715,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3709,
											"end": 3716,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3704,
											"end": 3706,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3693,
											"end": 3707,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3723,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3729,
											"end": 3851,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3729,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3820,
											"end": 3825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3795,
											"end": 3800,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3792,
											"end": 3827,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3782,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3782,
											"end": 3784,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3841,
											"end": 3842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3838,
											"end": 3839,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3782,
											"end": 3784,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3782,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3851,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3857,
											"end": 3979,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3857,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3948,
											"end": 3953,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3930,
											"end": 3954,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3930,
											"end": 3954,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3930,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3920,
											"end": 3955,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3910,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3910,
											"end": 3912,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3969,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3967,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3959,
											"end": 3971,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3910,
											"end": 3912,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3910,
											"end": 3912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3900,
											"end": 3979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3900,
											"end": 3979,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"tokenFallback(address,uint256,bytes)": "c0ee0b8a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"ERC223 token compatible contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Tokens.sol\":\"ERC223ReceivingContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Tokens.sol\":{\"keccak256\":\"0x836f6849c73c58588062bc670f3fb05b0b1558bcae2ebf5fcaa49aa892a33d71\",\"license\":\"LGPL-3.0+\",\"urls\":[\"bzz-raw://dfc4c4e9529b7931363e5ed52b3d92a1db473d4d4f315544a7f91e39e9f1d02e\",\"dweb:/ipfs/QmVQpwWE7ZGCRRwcL7ShEkhrp9gywgEevXAQSi44pAr5Fg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "ERC223 token compatible contract",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Tokens.sol": {
				"ast": {
					"absolutePath": "contracts/Tokens.sol",
					"exportedSymbols": {
						"ERC20": [
							20
						],
						"ERC223ReceivingContract": [
							120
						]
					},
					"id": 121,
					"license": "LGPL-3.0+",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "98:23:0"
						},
						{
							"id": 2,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "122:33:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "157:259:0",
								"text": "Declare the ERC20 interface in order to handle ERC20 tokens transfers to\n and from the Mixer. Note that we only declare the functions we are\n interested in, namely, transferFrom() (used to do a Deposit), and\n transfer() (used to do a withdrawal)"
							},
							"fullyImplemented": false,
							"id": 20,
							"linearizedBaseContracts": [
								20
							],
							"name": "ERC20",
							"nameLocation": "434:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "23b872dd",
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "456:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "477:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "469:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "491:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "483:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "483:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "503:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "495:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "468:41:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "524:0:0"
									},
									"scope": 20,
									"src": "447:78:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "539:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "547:27:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "589:0:0"
									},
									"scope": 20,
									"src": "530:60:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 121,
							"src": "416:176:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 21,
								"nodeType": "StructuredDocumentation",
								"src": "594:37:0",
								"text": "ERC223 token compatible contract"
							},
							"fullyImplemented": true,
							"id": 120,
							"linearizedBaseContracts": [
								120
							],
							"name": "ERC223ReceivingContract",
							"nameLocation": "640:23:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC223ReceivingContract.Token",
									"id": 30,
									"members": [
										{
											"constant": false,
											"id": 23,
											"mutability": "mutable",
											"name": "sender",
											"nameLocation": "860:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "852:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 22,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "852:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 25,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "884:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "876:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 24,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "876:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 27,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "905:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "899:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 26,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "899:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 29,
											"mutability": "mutable",
											"name": "sig",
											"nameLocation": "926:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "919:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes4",
												"typeString": "bytes4"
											},
											"typeName": {
												"id": 28,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "919:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Token",
									"nameLocation": "836:5:0",
									"nodeType": "StructDefinition",
									"scope": 120,
									"src": "829:107:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "1075:501:0",
										"statements": [
											{
												"assignments": [
													41
												],
												"declarations": [
													{
														"constant": false,
														"id": 41,
														"mutability": "mutable",
														"name": "tkn",
														"nameLocation": "1098:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 118,
														"src": "1085:16:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Token_$30_memory_ptr",
															"typeString": "struct ERC223ReceivingContract.Token"
														},
														"typeName": {
															"id": 40,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 39,
																"name": "Token",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 30,
																"src": "1085:5:0"
															},
															"referencedDeclaration": 30,
															"src": "1085:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_$30_storage_ptr",
																"typeString": "struct ERC223ReceivingContract.Token"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 42,
												"nodeType": "VariableDeclarationStatement",
												"src": "1085:16:0"
											},
											{
												"expression": {
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 43,
															"name": "tkn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "1111:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_$30_memory_ptr",
																"typeString": "struct ERC223ReceivingContract.Token memory"
															}
														},
														"id": 45,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "1111:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 46,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "1124:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1111:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1111:17:0"
											},
											{
												"expression": {
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 49,
															"name": "tkn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "1138:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_$30_memory_ptr",
																"typeString": "struct ERC223ReceivingContract.Token memory"
															}
														},
														"id": 51,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 25,
														"src": "1138:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 52,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1150:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1138:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "1138:17:0"
											},
											{
												"expression": {
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 55,
															"name": "tkn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "1165:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_$30_memory_ptr",
																"typeString": "struct ERC223ReceivingContract.Token memory"
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 27,
														"src": "1165:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 58,
														"name": "data",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "1176:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "1165:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1165:15:0"
											},
											{
												"assignments": [
													62
												],
												"declarations": [
													{
														"constant": false,
														"id": 62,
														"mutability": "mutable",
														"name": "u",
														"nameLocation": "1370:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 118,
														"src": "1363:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 61,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "1363:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 108,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 67,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 36,
																					"src": "1400:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 69,
																				"indexExpression": {
																					"hexValue": "30",
																					"id": 68,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1405:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1400:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			],
																			"id": 66,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1393:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes4_$",
																				"typeString": "type(bytes4)"
																			},
																			"typeName": {
																				"id": 65,
																				"name": "bytes4",
																				"nodeType": "ElementaryTypeName",
																				"src": "1393:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 70,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1393:15:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1386:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 63,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1386:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1386:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 76,
																						"name": "data",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 36,
																						"src": "1438:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 78,
																					"indexExpression": {
																						"hexValue": "31",
																						"id": 77,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1443:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1438:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				],
																				"id": 75,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1431:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes4_$",
																					"typeString": "type(bytes4)"
																				},
																				"typeName": {
																					"id": 74,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "1431:6:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 79,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1431:15:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">>",
																		"rightExpression": {
																			"hexValue": "38",
																			"id": 80,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1450:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "1431:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"id": 73,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1424:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 72,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1424:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1424:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"src": "1386:66:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 88,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 36,
																					"src": "1481:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 90,
																				"indexExpression": {
																					"hexValue": "32",
																					"id": 89,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1486:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1481:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			],
																			"id": 87,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1474:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes4_$",
																				"typeString": "type(bytes4)"
																			},
																			"typeName": {
																				"id": 86,
																				"name": "bytes4",
																				"nodeType": "ElementaryTypeName",
																				"src": "1474:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 91,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1474:15:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3136",
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1493:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	"src": "1474:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1467:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint32_$",
																	"typeString": "type(uint32)"
																},
																"typeName": {
																	"id": 84,
																	"name": "uint32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1467:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1467:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "1386:110:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 100,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 36,
																				"src": "1525:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 102,
																			"indexExpression": {
																				"hexValue": "33",
																				"id": 101,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1530:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"value": "3"
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1525:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		],
																		"id": 99,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1518:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes4_$",
																			"typeString": "type(bytes4)"
																		},
																		"typeName": {
																			"id": 98,
																			"name": "bytes4",
																			"nodeType": "ElementaryTypeName",
																			"src": "1518:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1518:15:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3234",
																	"id": 104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1537:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_24_by_1",
																		"typeString": "int_const 24"
																	},
																	"value": "24"
																},
																"src": "1518:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1511:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint32_$",
																"typeString": "type(uint32)"
															},
															"typeName": {
																"id": 96,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "1511:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1511:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1386:154:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1363:177:0"
											},
											{
												"expression": {
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 109,
															"name": "tkn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "1550:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_$30_memory_ptr",
																"typeString": "struct ERC223ReceivingContract.Token memory"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "sig",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 29,
														"src": "1550:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 114,
																"name": "u",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 62,
																"src": "1567:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															],
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1560:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes4_$",
																"typeString": "type(bytes4)"
															},
															"typeName": {
																"id": 112,
																"name": "bytes4",
																"nodeType": "ElementaryTypeName",
																"src": "1560:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1560:9:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1550:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "1550:19:0"
											}
										]
									},
									"functionSelector": "c0ee0b8a",
									"id": 119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenFallback",
									"nameLocation": "951:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "982:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "974:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1004:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "996:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "996:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1032:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1019:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 35,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1019:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "964:78:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1075:0:0"
									},
									"scope": 120,
									"src": "942:634:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 121,
							"src": "631:947:0"
						}
					],
					"src": "98:1481:0"
				},
				"id": 0
			}
		}
	}
}