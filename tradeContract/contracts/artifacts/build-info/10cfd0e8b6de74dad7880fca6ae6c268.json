{
	"id": "10cfd0e8b6de74dad7880fca6ae6c268",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.2",
	"solcLongVersion": "0.8.2+commit.661d1103",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Groth16AltBN128.sol": {
				"content": "// Copyright (c) 2015-2020 Clearmatics Technologies Ltd\n// Copyright (c) 2021-2021 Zkrypto Inc.\n// SPDX-License-Identifier: LGPL-3.0+\n\npragma solidity >=0.5.0;\n\nlibrary Groth16AltBN128\n{\n    // The structure of the verification key differs from the reference paper.\n    // It doesn't contain any element of GT, but only elements of G1 and G2\n    // (the source groups). This is due to the lack of precompiled contract to\n    // manipulate elements of the target group GT on Ethereum. Note that Beta\n    // and Delta are negated to avoid having to perform point negations in\n    // contract code.\n\n    // Used by client code to verify that inputs are in the correct field.\n    uint256 internal constant _PRIME_R =\n        // solhint-disable-next-line max-line-length\n        21888242871839275222246405745257275088548364400416034343698204186575808495617;\n\n    // Fr elements and Fq elements can be held in a single uint256. Therefore\n    // G1 elements require 2 uint256s. G2 elements have coordinates in Fp2, and\n    // therefore occupy 4 uint256s. Based on this, the offsets and slot numbers\n    // are given below.\n\n    // VerifyingKey:\n    //     uint256[2] Alpha;       // slots 0x00, 0x01\n    //     uint256[4] Minus_Beta;  // slots 0x02, 0x03, 0x04, 0x05\n    //     uint256[4] Minus_Delta; // slots 0x06, 0x07, 0x08, 0x09\n    //     uint256[] ABC;          // slot 0x0a (each entry uses 2 words)\n\n    // Proof:\n    //\n    //     uint256[2] a,              (offset 00 - 0x00)\n    //     uint256[4] b,              (offset 02 - 0x02)\n    //     uint256[2] c,              (offset 06 - 0x06)\n    //     <end>                      (offset 08 - 0x08)\n\n    function _verify(\n        uint256[] storage vk,\n        uint256[] memory proof,\n        uint256[] memory input\n    )\n        internal\n        returns (bool)\n    {\n        require(proof.length == 8, \"Proof size invalid (ALT-BN128)\");\n        \n\n        // Compute the number of inputs expected, based on the verification key\n        // size. (-1 because the VK contains the base point corresponding to a\n        // virtual first input of value 1).\n        uint256 numInputs = ((vk.length - 0x0a) / 2) - 1;\n        require(\n            input.length == numInputs,\n            \"Input length differs from expected\");\n\n        // Ensure that all inputs belong to the scalar field.\n        for (uint256 i = 0 ; i < numInputs; i++) {\n            require(input[i] < _PRIME_R, \"Input is not in scalar field\");\n        }\n\n        // 1. Compute the linear combination\n        //   vk_x = \\sum_{i=0}^{l} a_i * vk.ABC[i], vk_x in G1.\n        //\n        // ORIGINAL CODE:\n        //   Pairing.G1Point memory vk_x = vk.ABC[0]; // a_0 = 1\n        //   for (uint256 i = 0; i < input.length; i++) {\n        //       vk_x =\n        //           Pairing.add(vk_x, Pairing.mul(vk.ABC[i + 1], input[i]));\n        //   }\n        //\n        // The linear combination loop was the biggest cost center of the mixer\n        // contract. The following assembly block removes a lot of unnecessary\n        // memory usage and data copying, but relies on the structure of\n        // storage data.\n        //\n        // `pad` is layed out as follows, (so that calls to precompiled\n        // contracts can be done with minimal data copying)\n        //\n        //  OFFSET  USAGE\n        //   0x20    accum_y\n        //   0x00    accum_x\n\n        // In each iteration, copy scalar multiplicaation data to 0x40+\n        //\n        //  OFFSET  USAGE\n        //   0x80    input_i   --\n        //   0x60    abc_y      | compute abc[i+1] * input[i] in-place\n        //   0x40    abc_x     --\n        //   0x20    accum_y\n        //   0x00    accum_x\n        //\n        //  ready to call bn256ScalarMul(in: 0x40, out: 0x40). This gives:\n        //\n        //  OFFSET  USAGE\n        //   0x80\n        //   0x60    input_i * abc_y  --\n        //   0x40    input_i * abc_x   |  accum = accum + input[i] * abc[i+1]\n        //   0x20    accum_y           |\n        //   0x00    accum_x          --\n        //\n        //  ready to call bn256Add(in: 0x00, out: 0x00) to update accum_x,\n        //  accum_y in place.\n\n        // Memory scratch pad, large enough to accomodate the above layout.\n        uint256[24] memory pad;\n        bool success = true;\n        uint256 vk_slot_num;\n        assembly {\n\n            let g := sub(gas(), 2000)\n            \n\n            // Compute starting slot of vk data.\n            mstore(pad, vk.slot)\n            \n            vk_slot_num := keccak256(pad, 0x20)\n            let abc_slot_num := add(vk_slot_num, 0x0a)\n\n            // Compute input array bounds (layout: <len>,elem_0,elem_1...)\n            let input_i := add(input, 0x20)\n            let input_end := add(input_i, mul(0x20, mload(input)))\n\n            // Initialize pad[0] with abc[0]\n            mstore(pad, sload(abc_slot_num))\n            abc_slot_num := add(abc_slot_num, 1)\n            mstore(add(pad, 0x20), sload(abc_slot_num))\n            abc_slot_num := add(abc_slot_num, 1)\n\n            // Location within pad to do scalar mul operation\n            let mul_in := add(pad, 0x40)\n\n            // Iterate over all inputs / ABC values\n            for\n                { }\n                lt(input_i, input_end)\n                { }\n            {\n                // Copy abc[i+1] into mul_in, incrementing abc_slot_num\n                mstore(mul_in, sload(abc_slot_num))\n                abc_slot_num := add(abc_slot_num, 1)\n                mstore(add(mul_in, 0x20), sload(abc_slot_num))\n                abc_slot_num := add(abc_slot_num, 1)\n\n                // Copy input[i] into mul_in + 0x40, and increment index_i\n                mstore(add(mul_in, 0x40), mload(input_i))\n                input_i := add(input_i, 0x20)\n\n                // bn256ScalarMul and bn256Add can be done with no copying\n                let s1 := call(g, 7, 0, mul_in, 0x60, mul_in, 0x40)\n                let s2 := call(g, 6, 0, pad, 0x80, pad, 0x40)\n                success := and(success, and(s1, s2))\n            }\n        }\n\n        require(\n            success,\n            \"Call to the bn256Add or bn256ScalarMul precompiled failed\");\n\n        // 2. The verification check:\n        //   e(Proof.A, Proof.B) =\n        //       e(vk.Alpha, vk.Beta) * e(vk_x, g2) * e(Proof.C, vk.Delta)\n        // where:\n        // - e: G_1 x G_2 -> G_T is a bilinear map\n        // - `*`: denote the group operation in G_T\n\n        // Assembly below fills out pad and calls bn256Pairing, performing a\n        // check of the form:\n        //\n        //   e(vk_x, -g2) * e(vk.Alpha, vk.Minus_Beta) *\n        //       e(negate(Proof.A), Proof.B) * e(Proof.C, vk.Minus_Delta) == 1\n        //\n        // See Pairing.pairing(). Note terms have been re-ordered since vk_x is\n        // already at offset 0x00. Memory is laid out:\n        //\n        //   0x0300\n        //   0x0280 - verifyKey.Minus_Delta in G2\n        //   0x0240 - proof.C in G1\n        //   0x01c0 - Proof.B in G2\n        //   0x0180 - Proof.A in G1\n        //   0x0100 - vk.Minus_Beta in G2\n        //   0x00c0 - vk.Alpha in G1\n        //   0x0040 - -g2 in G2\n        //   0x0000 - vk_x in G1  (Already present, by the above)\n\n        assembly {\n\n            // Write -g2 (G2 generator), from offset 0x40. (These values are\n            // computed by the ec_operations_data_test).\n            mstore(\n                add(pad, 0x040),\n                // solhint-disable-next-line max-line-length\n                0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2)\n            mstore(\n                add(pad, 0x060),\n                // solhint-disable-next-line max-line-length\n                0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed)\n            mstore(\n                add(pad, 0x080),\n                // solhint-disable-next-line max-line-length\n                0x275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec)\n            mstore(\n                add(pad, 0x0a0),\n                // solhint-disable-next-line max-line-length\n                0x1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d)\n\n            // Write vk.Alpha, vk.Minus_Beta (first 6 uints from verifyKey)\n            // from offset 0x0c0.\n            mstore(add(pad, 0x0c0), sload(vk_slot_num))\n            mstore(add(pad, 0x0e0), sload(add(vk_slot_num, 1)))\n            mstore(add(pad, 0x100), sload(add(vk_slot_num, 2)))\n            mstore(add(pad, 0x120), sload(add(vk_slot_num, 3)))\n            mstore(add(pad, 0x140), sload(add(vk_slot_num, 4)))\n            mstore(add(pad, 0x160), sload(add(vk_slot_num, 5)))\n\n            // // Write Proof.A and Proof.B from offset 0x180.\n            proof := add(proof, 0x20)\n            mstore(add(pad, 0x180), mload(proof))\n            mstore(add(pad, 0x1a0), mload(add(proof, 0x20)))\n            mstore(add(pad, 0x1c0), mload(add(proof, 0x40)))\n            mstore(add(pad, 0x1e0), mload(add(proof, 0x60)))\n            mstore(add(pad, 0x200), mload(add(proof, 0x80)))\n            mstore(add(pad, 0x220), mload(add(proof, 0xa0)))\n\n            // // Proof.C and verifyKey.Minus_Delta from offset 0x240.\n            mstore(add(pad, 0x240), mload(add(proof, 0xc0)))\n            mstore(add(pad, 0x260), mload(add(proof, 0xe0)))\n            mstore(add(pad, 0x280), sload(add(vk_slot_num, 6)))\n            mstore(add(pad, 0x2a0), sload(add(vk_slot_num, 7)))\n            mstore(add(pad, 0x2c0), sload(add(vk_slot_num, 8)))\n            mstore(add(pad, 0x2e0), sload(add(vk_slot_num, 9)))\n\n            success := call(sub(gas(), 2000), 8, 0, pad, 0x300, pad, 0x20)\n        }\n\n        require(\n            success,\n            \"Call to bn256Add, bn256ScalarMul or bn256Pairing failed\");\n        \n        return 1 == pad[0];\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Groth16AltBN128.sol": {
				"Groth16AltBN128": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Groth16AltBN128.sol\":161:9746  library Groth16AltBN128... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Groth16AltBN128.sol\":161:9746  library Groth16AltBN128... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220311b73fdb225da224b8911f801d75632b66c171e8a1b8d3374806993cd6f3e6b64736f6c63430008020033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220311b73fdb225da224b8911f801d75632b66c171e8a1b8d3374806993cd6f3e6b64736f6c63430008020033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE SHL PUSH20 0xFDB225DA224B8911F801D75632B66C171E8A1B8D CALLER PUSH21 0x806993CD6F3E6B64736F6C63430008020033000000 ",
							"sourceMap": "161:9585:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220311b73fdb225da224b8911f801d75632b66c171e8a1b8d3374806993cd6f3e6b64736f6c63430008020033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE SHL PUSH20 0xFDB225DA224B8911F801D75632B66C171E8A1B8D CALLER PUSH21 0x806993CD6F3E6B64736F6C63430008020033000000 ",
							"sourceMap": "161:9585:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verify(uint256[] storage pointer,uint256[] memory,uint256[] memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 161,
									"end": 9746,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 161,
									"end": 9746,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220311b73fdb225da224b8911f801d75632b66c171e8a1b8d3374806993cd6f3e6b64736f6c63430008020033",
									".code": [
										{
											"begin": 161,
											"end": 9746,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 161,
											"end": 9746,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 161,
											"end": 9746,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 161,
											"end": 9746,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 161,
											"end": 9746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 9746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 161,
											"end": 9746,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 9746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 161,
											"end": 9746,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Groth16AltBN128.sol\":\"Groth16AltBN128\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Groth16AltBN128.sol\":{\"keccak256\":\"0x0397fa4a897ae75e5d26f118076367419ebe52a1621989049e08f5ed04261fa3\",\"license\":\"LGPL-3.0+\",\"urls\":[\"bzz-raw://ed94e3b834dd51dc285314399c6f94fd2ed0d8b8a687f2b08f5d1064d9b45039\",\"dweb:/ipfs/QmbJCVACjNUgqEK2pDF2StjrAC83Ujd3Zq9yuBVkHwX5DQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Groth16AltBN128.sol": {
				"ast": {
					"absolutePath": "contracts/Groth16AltBN128.sol",
					"exportedSymbols": {
						"Groth16AltBN128": [
							102
						]
					},
					"id": 103,
					"license": "LGPL-3.0+",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "135:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 102,
							"linearizedBaseContracts": [
								102
							],
							"name": "Groth16AltBN128",
							"nameLocation": "169:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 4,
									"mutability": "constant",
									"name": "_PRIME_R",
									"nameLocation": "702:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 102,
									"src": "676:175:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "676:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3231383838323432383731383339323735323232323436343035373435323537323735303838353438333634343030343136303334333433363938323034313836353735383038343935363137",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "774:77:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_21888242871839275222246405745257275088548364400416034343698204186575808495617_by_1",
											"typeString": "int_const 2188...(69 digits omitted)...5617"
										},
										"value": "21888242871839275222246405745257275088548364400416034343698204186575808495617"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "1817:7927:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 19,
																	"name": "proof",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "1835:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1835:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "38",
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1851:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_8_by_1",
																	"typeString": "int_const 8"
																},
																"value": "8"
															},
															"src": "1835:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726f6f662073697a6520696e76616c69642028414c542d424e31323829",
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1854:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b230903ea33449cbd8ddd3e0a469ee916bdca8c0436df1fb43aa0a44a2279019",
																"typeString": "literal_string \"Proof size invalid (ALT-BN128)\""
															},
															"value": "Proof size invalid (ALT-BN128)"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b230903ea33449cbd8ddd3e0a469ee916bdca8c0436df1fb43aa0a44a2279019",
																"typeString": "literal_string \"Proof size invalid (ALT-BN128)\""
															}
														],
														"id": 18,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1827:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1827:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "1827:60:0"
											},
											{
												"assignments": [
													27
												],
												"declarations": [
													{
														"constant": false,
														"id": 27,
														"mutability": "mutable",
														"name": "numInputs",
														"nameLocation": "2118:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 100,
														"src": "2110:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 26,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2110:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 38,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 31,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 28,
																					"name": "vk",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 7,
																					"src": "2132:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 29,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2132:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "30783061",
																				"id": 30,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2144:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "0x0a"
																			},
																			"src": "2132:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 32,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2131:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 33,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2152:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2131:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 35,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2130:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2157:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2130:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2110:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 40,
																	"name": "input",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "2189:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2189:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 42,
																"name": "numInputs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "2205:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2189:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e707574206c656e67746820646966666572732066726f6d206578706563746564",
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2228:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7dff806fb703023d5b6b932846567271ed85eadfbdff9a9db6bed6f0e19a1cc7",
																"typeString": "literal_string \"Input length differs from expected\""
															},
															"value": "Input length differs from expected"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7dff806fb703023d5b6b932846567271ed85eadfbdff9a9db6bed6f0e19a1cc7",
																"typeString": "literal_string \"Input length differs from expected\""
															}
														],
														"id": 39,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2168:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2168:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "2168:97:0"
											},
											{
												"body": {
													"id": 66,
													"nodeType": "Block",
													"src": "2379:85:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 62,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 58,
																				"name": "input",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 13,
																				"src": "2401:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 60,
																			"indexExpression": {
																				"id": 59,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 48,
																				"src": "2407:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2401:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 61,
																			"name": "_PRIME_R",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4,
																			"src": "2412:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2401:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e707574206973206e6f7420696e207363616c6172206669656c64",
																		"id": 63,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2422:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ad0a0390844dae467dd5991deeb0a21257f946ebb61fbd9ff70a336de3b8ff97",
																			"typeString": "literal_string \"Input is not in scalar field\""
																		},
																		"value": "Input is not in scalar field"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ad0a0390844dae467dd5991deeb0a21257f946ebb61fbd9ff70a336de3b8ff97",
																			"typeString": "literal_string \"Input is not in scalar field\""
																		}
																	],
																	"id": 57,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2393:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2393:60:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 65,
															"nodeType": "ExpressionStatement",
															"src": "2393:60:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 51,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "2359:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 52,
														"name": "numInputs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2363:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2359:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 67,
												"initializationExpression": {
													"assignments": [
														48
													],
													"declarations": [
														{
															"constant": false,
															"id": 48,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2351:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 67,
															"src": "2343:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 47,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2343:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 50,
													"initialValue": {
														"hexValue": "30",
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2355:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2343:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2374:3:0",
														"subExpression": {
															"id": 54,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "2374:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 56,
													"nodeType": "ExpressionStatement",
													"src": "2374:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2338:126:0"
											},
											{
												"assignments": [
													73
												],
												"declarations": [
													{
														"constant": false,
														"id": 73,
														"mutability": "mutable",
														"name": "pad",
														"nameLocation": "4227:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 100,
														"src": "4208:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$24_memory_ptr",
															"typeString": "uint256[24]"
														},
														"typeName": {
															"baseType": {
																"id": 71,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4208:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 72,
															"length": {
																"hexValue": "3234",
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4216:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_24_by_1",
																	"typeString": "int_const 24"
																},
																"value": "24"
															},
															"nodeType": "ArrayTypeName",
															"src": "4208:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$24_storage_ptr",
																"typeString": "uint256[24]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 74,
												"nodeType": "VariableDeclarationStatement",
												"src": "4208:22:0"
											},
											{
												"assignments": [
													76
												],
												"declarations": [
													{
														"constant": false,
														"id": 76,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4245:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 100,
														"src": "4240:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 75,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4240:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 78,
												"initialValue": {
													"hexValue": "74727565",
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4255:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4240:19:0"
											},
											{
												"assignments": [
													80
												],
												"declarations": [
													{
														"constant": false,
														"id": 80,
														"mutability": "mutable",
														"name": "vk_slot_num",
														"nameLocation": "4277:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 100,
														"src": "4269:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 79,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4269:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 81,
												"nodeType": "VariableDeclarationStatement",
												"src": "4269:19:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4307:1706:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4322:25:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "4335:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4335:5:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4342:4:0",
																		"type": "",
																		"value": "2000"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4331:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4331:16:0"
															},
															"variables": [
																{
																	"name": "g",
																	"nodeType": "YulTypedName",
																	"src": "4326:1:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pad",
																		"nodeType": "YulIdentifier",
																		"src": "4430:3:0"
																	},
																	{
																		"name": "vk.slot",
																		"nodeType": "YulIdentifier",
																		"src": "4435:7:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4423:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4423:20:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4423:20:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4469:35:0",
															"value": {
																"arguments": [
																	{
																		"name": "pad",
																		"nodeType": "YulIdentifier",
																		"src": "4494:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4499:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4484:9:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4484:20:0"
															},
															"variableNames": [
																{
																	"name": "vk_slot_num",
																	"nodeType": "YulIdentifier",
																	"src": "4469:11:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4517:42:0",
															"value": {
																"arguments": [
																	{
																		"name": "vk_slot_num",
																		"nodeType": "YulIdentifier",
																		"src": "4541:11:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4554:4:0",
																		"type": "",
																		"value": "0x0a"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4537:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4537:22:0"
															},
															"variables": [
																{
																	"name": "abc_slot_num",
																	"nodeType": "YulTypedName",
																	"src": "4521:12:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4648:31:0",
															"value": {
																"arguments": [
																	{
																		"name": "input",
																		"nodeType": "YulIdentifier",
																		"src": "4667:5:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4674:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4663:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4663:16:0"
															},
															"variables": [
																{
																	"name": "input_i",
																	"nodeType": "YulTypedName",
																	"src": "4652:7:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4692:54:0",
															"value": {
																"arguments": [
																	{
																		"name": "input_i",
																		"nodeType": "YulIdentifier",
																		"src": "4713:7:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4726:4:0",
																				"type": "",
																				"value": "0x20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "input",
																						"nodeType": "YulIdentifier",
																						"src": "4738:5:0"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "4732:5:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4732:12:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "4722:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4722:23:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4709:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4709:37:0"
															},
															"variables": [
																{
																	"name": "input_end",
																	"nodeType": "YulTypedName",
																	"src": "4696:9:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pad",
																		"nodeType": "YulIdentifier",
																		"src": "4812:3:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "abc_slot_num",
																				"nodeType": "YulIdentifier",
																				"src": "4823:12:0"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4817:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4817:19:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4805:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4805:32:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4805:32:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4850:36:0",
															"value": {
																"arguments": [
																	{
																		"name": "abc_slot_num",
																		"nodeType": "YulIdentifier",
																		"src": "4870:12:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4884:1:0",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4866:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4866:20:0"
															},
															"variableNames": [
																{
																	"name": "abc_slot_num",
																	"nodeType": "YulIdentifier",
																	"src": "4850:12:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pad",
																				"nodeType": "YulIdentifier",
																				"src": "4910:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4915:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4906:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4906:14:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "abc_slot_num",
																				"nodeType": "YulIdentifier",
																				"src": "4928:12:0"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4922:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4922:19:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4899:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4899:43:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4899:43:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4955:36:0",
															"value": {
																"arguments": [
																	{
																		"name": "abc_slot_num",
																		"nodeType": "YulIdentifier",
																		"src": "4975:12:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4989:1:0",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4971:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4971:20:0"
															},
															"variableNames": [
																{
																	"name": "abc_slot_num",
																	"nodeType": "YulIdentifier",
																	"src": "4955:12:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5067:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "pad",
																		"nodeType": "YulIdentifier",
																		"src": "5085:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5090:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5081:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5081:14:0"
															},
															"variables": [
																{
																	"name": "mul_in",
																	"nodeType": "YulTypedName",
																	"src": "5071:6:0",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5256:747:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "mul_in",
																					"nodeType": "YulIdentifier",
																					"src": "5353:6:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "abc_slot_num",
																							"nodeType": "YulIdentifier",
																							"src": "5367:12:0"
																						}
																					],
																					"functionName": {
																						"name": "sload",
																						"nodeType": "YulIdentifier",
																						"src": "5361:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5361:19:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5346:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5346:35:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5346:35:0"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5398:36:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "abc_slot_num",
																					"nodeType": "YulIdentifier",
																					"src": "5418:12:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5432:1:0",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5414:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5414:20:0"
																		},
																		"variableNames": [
																			{
																				"name": "abc_slot_num",
																				"nodeType": "YulIdentifier",
																				"src": "5398:12:0"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "mul_in",
																							"nodeType": "YulIdentifier",
																							"src": "5462:6:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5470:4:0",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5458:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5458:17:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "abc_slot_num",
																							"nodeType": "YulIdentifier",
																							"src": "5483:12:0"
																						}
																					],
																					"functionName": {
																						"name": "sload",
																						"nodeType": "YulIdentifier",
																						"src": "5477:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5477:19:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5451:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5451:46:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5451:46:0"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5514:36:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "abc_slot_num",
																					"nodeType": "YulIdentifier",
																					"src": "5534:12:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5548:1:0",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5530:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5530:20:0"
																		},
																		"variableNames": [
																			{
																				"name": "abc_slot_num",
																				"nodeType": "YulIdentifier",
																				"src": "5514:12:0"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "mul_in",
																							"nodeType": "YulIdentifier",
																							"src": "5654:6:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5662:4:0",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5650:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5650:17:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "input_i",
																							"nodeType": "YulIdentifier",
																							"src": "5675:7:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5669:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5669:14:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5643:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5643:41:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5643:41:0"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5701:29:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "input_i",
																					"nodeType": "YulIdentifier",
																					"src": "5716:7:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5725:4:0",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5712:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5712:18:0"
																		},
																		"variableNames": [
																			{
																				"name": "input_i",
																				"nodeType": "YulIdentifier",
																				"src": "5701:7:0"
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5823:51:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "g",
																					"nodeType": "YulIdentifier",
																					"src": "5838:1:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5841:1:0",
																					"type": "",
																					"value": "7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5844:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "mul_in",
																					"nodeType": "YulIdentifier",
																					"src": "5847:6:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5855:4:0",
																					"type": "",
																					"value": "0x60"
																				},
																				{
																					"name": "mul_in",
																					"nodeType": "YulIdentifier",
																					"src": "5861:6:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5869:4:0",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "call",
																				"nodeType": "YulIdentifier",
																				"src": "5833:4:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5833:41:0"
																		},
																		"variables": [
																			{
																				"name": "s1",
																				"nodeType": "YulTypedName",
																				"src": "5827:2:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5891:45:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "g",
																					"nodeType": "YulIdentifier",
																					"src": "5906:1:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5909:1:0",
																					"type": "",
																					"value": "6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5912:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "pad",
																					"nodeType": "YulIdentifier",
																					"src": "5915:3:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5920:4:0",
																					"type": "",
																					"value": "0x80"
																				},
																				{
																					"name": "pad",
																					"nodeType": "YulIdentifier",
																					"src": "5926:3:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5931:4:0",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "call",
																				"nodeType": "YulIdentifier",
																				"src": "5901:4:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5901:35:0"
																		},
																		"variables": [
																			{
																				"name": "s2",
																				"nodeType": "YulTypedName",
																				"src": "5895:2:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5953:36:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "success",
																					"nodeType": "YulIdentifier",
																					"src": "5968:7:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "s1",
																							"nodeType": "YulIdentifier",
																							"src": "5981:2:0"
																						},
																						{
																							"name": "s2",
																							"nodeType": "YulIdentifier",
																							"src": "5985:2:0"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5977:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5977:11:0"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5964:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5964:25:0"
																		},
																		"variableNames": [
																			{
																				"name": "success",
																				"nodeType": "YulIdentifier",
																				"src": "5953:7:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "input_i",
																		"nodeType": "YulIdentifier",
																		"src": "5204:7:0"
																	},
																	{
																		"name": "input_end",
																		"nodeType": "YulIdentifier",
																		"src": "5213:9:0"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5201:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5201:22:0"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5240:3:0",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5181:3:0",
																"statements": []
															},
															"src": "5161:842:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 13,
														"isOffset": false,
														"isSlot": false,
														"src": "4667:5:0",
														"valueSize": 1
													},
													{
														"declaration": 13,
														"isOffset": false,
														"isSlot": false,
														"src": "4738:5:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "4430:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "4494:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "4812:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "4910:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "5085:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "5915:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "5926:3:0",
														"valueSize": 1
													},
													{
														"declaration": 76,
														"isOffset": false,
														"isSlot": false,
														"src": "5953:7:0",
														"valueSize": 1
													},
													{
														"declaration": 76,
														"isOffset": false,
														"isSlot": false,
														"src": "5968:7:0",
														"valueSize": 1
													},
													{
														"declaration": 7,
														"isOffset": false,
														"isSlot": true,
														"src": "4435:7:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 80,
														"isOffset": false,
														"isSlot": false,
														"src": "4469:11:0",
														"valueSize": 1
													},
													{
														"declaration": 80,
														"isOffset": false,
														"isSlot": false,
														"src": "4541:11:0",
														"valueSize": 1
													}
												],
												"id": 82,
												"nodeType": "InlineAssembly",
												"src": "4298:1715:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 84,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "6044:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c20746f2074686520626e323536416464206f7220626e3235365363616c61724d756c20707265636f6d70696c6564206661696c6564",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6065:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d22497484622c7cc30990e442d7281324c09203cf5e335caf503a8014017b05f",
																"typeString": "literal_string \"Call to the bn256Add or bn256ScalarMul precompiled failed\""
															},
															"value": "Call to the bn256Add or bn256ScalarMul precompiled failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d22497484622c7cc30990e442d7281324c09203cf5e335caf503a8014017b05f",
																"typeString": "literal_string \"Call to the bn256Add or bn256ScalarMul precompiled failed\""
															}
														],
														"id": 83,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6023:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6023:102:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "6023:102:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7182:2408:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pad",
																				"nodeType": "YulIdentifier",
																				"src": "7359:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7364:5:0",
																				"type": "",
																				"value": "0x040"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7355:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7355:15:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7449:66:0",
																		"type": "",
																		"value": "0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7331:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7331:185:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7331:185:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pad",
																				"nodeType": "YulIdentifier",
																				"src": "7557:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7562:5:0",
																				"type": "",
																				"value": "0x060"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7553:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7553:15:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7647:66:0",
																		"type": "",
																		"value": "0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7529:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7529:185:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7529:185:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pad",
																				"nodeType": "YulIdentifier",
																				"src": "7755:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7760:5:0",
																				"type": "",
																				"value": "0x080"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7751:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7751:15:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7845:66:0",
																		"type": "",
																		"value": "0x275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7727:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7727:185:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7727:185:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pad",
																				"nodeType": "YulIdentifier",
																				"src": "7953:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7958:5:0",
																				"type": "",
																				"value": "0x0a0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7949:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7949:15:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8043:66:0",
																		"type": "",
																		"value": "0x1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7925:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7925:185:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7925:185:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pad",
																				"nodeType": "YulIdentifier",
																				"src": "8245:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8250:5:0",
																				"type": "",
																				"value": "0x0c0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8241:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8241:15:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "vk_slot_num",
																				"nodeType": "YulIdentifier",
																				"src": "8264:11:0"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "8258:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8258:18:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8234:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8234:43:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8234:43:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pad",
																				"nodeType": "YulIdentifier",
																				"src": "8301:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8306:5:0",
																				"type": "",
																				"value": "0x0e0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8297:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8297:15:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "vk_slot_num",
																						"nodeType": "YulIdentifier",
																						"src": "8324:11:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8337:1:0",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8320:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8320:19:0"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "8314:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8314:26:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8290:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8290:51:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8290:51:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pad",
																				"nodeType": "YulIdentifier",
																				"src": "8365:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8370:5:0",
																				"type": "",
																				"value": "0x100"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8361:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8361:15:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "vk_slot_num",
																						"nodeType": "YulIdentifier",
																						"src": "8388:11:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8401:1:0",
																						"type": "",
																						"value": "2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8384:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8384:19:0"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "8378:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8378:26:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8354:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8354:51:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8354:51:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pad",
																				"nodeType": "YulIdentifier",
																				"src": "8429:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8434:5:0",
																				"type": "",
																				"value": "0x120"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8425:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8425:15:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "vk_slot_num",
																						"nodeType": "YulIdentifier",
																						"src": "8452:11:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8465:1:0",
																						"type": "",
																						"value": "3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8448:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8448:19:0"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "8442:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8442:26:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8418:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8418:51:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8418:51:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pad",
																				"nodeType": "YulIdentifier",
																				"src": "8493:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8498:5:0",
																				"type": "",
																				"value": "0x140"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8489:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8489:15:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "vk_slot_num",
																						"nodeType": "YulIdentifier",
																						"src": "8516:11:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8529:1:0",
																						"type": "",
																						"value": "4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8512:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8512:19:0"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "8506:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8506:26:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8482:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8482:51:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8482:51:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pad",
																				"nodeType": "YulIdentifier",
																				"src": "8557:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8562:5:0",
																				"type": "",
																				"value": "0x160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8553:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8553:15:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "vk_slot_num",
																						"nodeType": "YulIdentifier",
																						"src": "8580:11:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8593:1:0",
																						"type": "",
																						"value": "5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8576:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8576:19:0"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "8570:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8570:26:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8546:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8546:51:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8546:51:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8674:25:0",
															"value": {
																"arguments": [
																	{
																		"name": "proof",
																		"nodeType": "YulIdentifier",
																		"src": "8687:5:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8694:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8683:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8683:16:0"
															},
															"variableNames": [
																{
																	"name": "proof",
																	"nodeType": "YulIdentifier",
																	"src": "8674:5:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pad",
																				"nodeType": "YulIdentifier",
																				"src": "8723:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8728:5:0",
																				"type": "",
																				"value": "0x180"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8719:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8719:15:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "proof",
																				"nodeType": "YulIdentifier",
																				"src": "8742:5:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8736:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8736:12:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8712:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8712:37:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8712:37:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pad",
																				"nodeType": "YulIdentifier",
																				"src": "8773:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8778:5:0",
																				"type": "",
																				"value": "0x1a0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8769:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8769:15:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "proof",
																						"nodeType": "YulIdentifier",
																						"src": "8796:5:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8803:4:0",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8792:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8792:16:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8786:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8786:23:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8762:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8762:48:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8762:48:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pad",
																				"nodeType": "YulIdentifier",
																				"src": "8834:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8839:5:0",
																				"type": "",
																				"value": "0x1c0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8830:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8830:15:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "proof",
																						"nodeType": "YulIdentifier",
																						"src": "8857:5:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8864:4:0",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8853:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8853:16:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8847:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8847:23:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8823:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8823:48:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8823:48:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pad",
																				"nodeType": "YulIdentifier",
																				"src": "8895:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8900:5:0",
																				"type": "",
																				"value": "0x1e0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8891:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8891:15:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "proof",
																						"nodeType": "YulIdentifier",
																						"src": "8918:5:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8925:4:0",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8914:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8914:16:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8908:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8908:23:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8884:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8884:48:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8884:48:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pad",
																				"nodeType": "YulIdentifier",
																				"src": "8956:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8961:5:0",
																				"type": "",
																				"value": "0x200"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8952:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8952:15:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "proof",
																						"nodeType": "YulIdentifier",
																						"src": "8979:5:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8986:4:0",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8975:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8975:16:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8969:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8969:23:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8945:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8945:48:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8945:48:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pad",
																				"nodeType": "YulIdentifier",
																				"src": "9017:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9022:5:0",
																				"type": "",
																				"value": "0x220"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9013:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9013:15:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "proof",
																						"nodeType": "YulIdentifier",
																						"src": "9040:5:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9047:4:0",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9036:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9036:16:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9030:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9030:23:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9006:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "9006:48:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9006:48:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pad",
																				"nodeType": "YulIdentifier",
																				"src": "9150:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9155:5:0",
																				"type": "",
																				"value": "0x240"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9146:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9146:15:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "proof",
																						"nodeType": "YulIdentifier",
																						"src": "9173:5:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9180:4:0",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9169:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9169:16:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9163:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9163:23:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9139:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "9139:48:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9139:48:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pad",
																				"nodeType": "YulIdentifier",
																				"src": "9211:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9216:5:0",
																				"type": "",
																				"value": "0x260"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9207:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9207:15:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "proof",
																						"nodeType": "YulIdentifier",
																						"src": "9234:5:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9241:4:0",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9230:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9230:16:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9224:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9224:23:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9200:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "9200:48:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9200:48:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pad",
																				"nodeType": "YulIdentifier",
																				"src": "9272:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9277:5:0",
																				"type": "",
																				"value": "0x280"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9268:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9268:15:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "vk_slot_num",
																						"nodeType": "YulIdentifier",
																						"src": "9295:11:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9308:1:0",
																						"type": "",
																						"value": "6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9291:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9291:19:0"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "9285:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9285:26:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9261:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "9261:51:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9261:51:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pad",
																				"nodeType": "YulIdentifier",
																				"src": "9336:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9341:5:0",
																				"type": "",
																				"value": "0x2a0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9332:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9332:15:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "vk_slot_num",
																						"nodeType": "YulIdentifier",
																						"src": "9359:11:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9372:1:0",
																						"type": "",
																						"value": "7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9355:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9355:19:0"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "9349:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9349:26:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9325:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "9325:51:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9325:51:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pad",
																				"nodeType": "YulIdentifier",
																				"src": "9400:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9405:5:0",
																				"type": "",
																				"value": "0x2c0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9396:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9396:15:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "vk_slot_num",
																						"nodeType": "YulIdentifier",
																						"src": "9423:11:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9436:1:0",
																						"type": "",
																						"value": "8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9419:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9419:19:0"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "9413:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9413:26:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9389:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "9389:51:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9389:51:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pad",
																				"nodeType": "YulIdentifier",
																				"src": "9464:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9469:5:0",
																				"type": "",
																				"value": "0x2e0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9460:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9460:15:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "vk_slot_num",
																						"nodeType": "YulIdentifier",
																						"src": "9487:11:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9500:1:0",
																						"type": "",
																						"value": "9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9483:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9483:19:0"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "9477:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9477:26:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9453:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "9453:51:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9453:51:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9518:62:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "gas",
																					"nodeType": "YulIdentifier",
																					"src": "9538:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9538:5:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9545:4:0",
																				"type": "",
																				"value": "2000"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9534:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9534:16:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9552:1:0",
																		"type": "",
																		"value": "8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9555:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "pad",
																		"nodeType": "YulIdentifier",
																		"src": "9558:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9563:5:0",
																		"type": "",
																		"value": "0x300"
																	},
																	{
																		"name": "pad",
																		"nodeType": "YulIdentifier",
																		"src": "9570:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9575:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "9529:4:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "9529:51:0"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "9518:7:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "7359:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "7557:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "7755:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "7953:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "8245:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "8301:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "8365:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "8429:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "8493:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "8557:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "8723:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "8773:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "8834:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "8956:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "9017:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "9150:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "9211:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "9272:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "9336:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "9400:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "9464:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "9558:3:0",
														"valueSize": 1
													},
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "9570:3:0",
														"valueSize": 1
													},
													{
														"declaration": 10,
														"isOffset": false,
														"isSlot": false,
														"src": "8674:5:0",
														"valueSize": 1
													},
													{
														"declaration": 10,
														"isOffset": false,
														"isSlot": false,
														"src": "8687:5:0",
														"valueSize": 1
													},
													{
														"declaration": 10,
														"isOffset": false,
														"isSlot": false,
														"src": "8742:5:0",
														"valueSize": 1
													},
													{
														"declaration": 10,
														"isOffset": false,
														"isSlot": false,
														"src": "8796:5:0",
														"valueSize": 1
													},
													{
														"declaration": 10,
														"isOffset": false,
														"isSlot": false,
														"src": "8857:5:0",
														"valueSize": 1
													},
													{
														"declaration": 10,
														"isOffset": false,
														"isSlot": false,
														"src": "8918:5:0",
														"valueSize": 1
													},
													{
														"declaration": 10,
														"isOffset": false,
														"isSlot": false,
														"src": "8979:5:0",
														"valueSize": 1
													},
													{
														"declaration": 10,
														"isOffset": false,
														"isSlot": false,
														"src": "9040:5:0",
														"valueSize": 1
													},
													{
														"declaration": 10,
														"isOffset": false,
														"isSlot": false,
														"src": "9173:5:0",
														"valueSize": 1
													},
													{
														"declaration": 10,
														"isOffset": false,
														"isSlot": false,
														"src": "9234:5:0",
														"valueSize": 1
													},
													{
														"declaration": 76,
														"isOffset": false,
														"isSlot": false,
														"src": "9518:7:0",
														"valueSize": 1
													},
													{
														"declaration": 80,
														"isOffset": false,
														"isSlot": false,
														"src": "8264:11:0",
														"valueSize": 1
													},
													{
														"declaration": 80,
														"isOffset": false,
														"isSlot": false,
														"src": "8324:11:0",
														"valueSize": 1
													},
													{
														"declaration": 80,
														"isOffset": false,
														"isSlot": false,
														"src": "8388:11:0",
														"valueSize": 1
													},
													{
														"declaration": 80,
														"isOffset": false,
														"isSlot": false,
														"src": "8452:11:0",
														"valueSize": 1
													},
													{
														"declaration": 80,
														"isOffset": false,
														"isSlot": false,
														"src": "8516:11:0",
														"valueSize": 1
													},
													{
														"declaration": 80,
														"isOffset": false,
														"isSlot": false,
														"src": "8580:11:0",
														"valueSize": 1
													},
													{
														"declaration": 80,
														"isOffset": false,
														"isSlot": false,
														"src": "9295:11:0",
														"valueSize": 1
													},
													{
														"declaration": 80,
														"isOffset": false,
														"isSlot": false,
														"src": "9359:11:0",
														"valueSize": 1
													},
													{
														"declaration": 80,
														"isOffset": false,
														"isSlot": false,
														"src": "9423:11:0",
														"valueSize": 1
													},
													{
														"declaration": 80,
														"isOffset": false,
														"isSlot": false,
														"src": "9487:11:0",
														"valueSize": 1
													}
												],
												"id": 88,
												"nodeType": "InlineAssembly",
												"src": "7173:2417:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 90,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "9621:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c20746f20626e3235364164642c20626e3235365363616c61724d756c206f7220626e32353650616972696e67206661696c6564",
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9642:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9eb68ae3a3991eda8acb5c2a0c4bcad90fa68d9593f8691365fffe1436b2f3a",
																"typeString": "literal_string \"Call to bn256Add, bn256ScalarMul or bn256Pairing failed\""
															},
															"value": "Call to bn256Add, bn256ScalarMul or bn256Pairing failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c9eb68ae3a3991eda8acb5c2a0c4bcad90fa68d9593f8691365fffe1436b2f3a",
																"typeString": "literal_string \"Call to bn256Add, bn256ScalarMul or bn256Pairing failed\""
															}
														],
														"id": 89,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9600:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9600:100:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "9600:100:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 94,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9726:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"baseExpression": {
															"id": 95,
															"name": "pad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "9731:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$24_memory_ptr",
																"typeString": "uint256[24] memory"
															}
														},
														"id": 97,
														"indexExpression": {
															"hexValue": "30",
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9735:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9731:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9726:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 17,
												"id": 99,
												"nodeType": "Return",
												"src": "9719:18:0"
											}
										]
									},
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verify",
									"nameLocation": "1665:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "vk",
												"nameLocation": "1700:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1682:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 5,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1682:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 6,
													"nodeType": "ArrayTypeName",
													"src": "1682:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "1729:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1712:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 8,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1712:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 9,
													"nodeType": "ArrayTypeName",
													"src": "1712:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "1761:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1744:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 11,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1744:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 12,
													"nodeType": "ArrayTypeName",
													"src": "1744:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1672:100:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1807:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 15,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1807:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1806:6:0"
									},
									"scope": 102,
									"src": "1656:8088:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 103,
							"src": "161:9585:0"
						}
					],
					"src": "135:9612:0"
				},
				"id": 0
			}
		}
	}
}