{
	"compiler": {
		"version": "0.8.2+commit.661d1103"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "message",
						"type": "bytes32"
					}
				],
				"name": "LogDebug",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "_computeMerklePath",
				"outputs": [
					{
						"internalType": "bytes32[]",
						"name": "",
						"type": "bytes32[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "_nodes",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"constructor": {
					"notice": "Constructor"
				}
			},
			"notice": "Abstract Merkle tree implementation. Child classes should implement the hash function. The Merkle tree implementation must trade-off complexity, storage, initialization cost, and update & root computation cost. This implementation stores all leaves and nodes, skipping those that have not been populated yet. The final entry in each layer stores that layer's default value.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/BaseMerkleTree.sol": "BaseMerkleTree"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/BaseMerkleTree.sol": {
			"keccak256": "0xe4680463a9ef39b1eb67c89e3fddda27aaee8b40dc4387e83321578b6bd372f8",
			"license": "LGPL-3.0+",
			"urls": [
				"bzz-raw://9515268fe946df92935efcea96ecc1092dc5bcb2abfc316235850fc7d1972bbc",
				"dweb:/ipfs/QmdWrFLMPWzxj8ZM3gtr4mv9cKLpFADzTr8hKp5ytvWkE8"
			]
		}
	},
	"version": 1
}